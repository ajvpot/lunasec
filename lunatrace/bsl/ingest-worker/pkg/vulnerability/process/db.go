package process

import (
	golog "log"
	"os"
	"time"

	"github.com/anchore/sqlite"
	"gorm.io/gorm"
	"gorm.io/gorm/logger"
)

func loadGormDB(cache string) (*gorm.DB, error) {
	newLogger := logger.New(
		golog.New(os.Stdout, "\r\n", golog.LstdFlags),
		logger.Config{
			SlowThreshold:             time.Second,
			LogLevel:                  logger.Silent,
			IgnoreRecordNotFoundError: true,
			Colorful:                  false,
		},
	)
	db, err := gorm.Open(sqlite.Open(cache+"?cache=shared&mode=rwc"), &gorm.Config{
		Logger: newLogger,
	})
	if err != nil {
		return nil, err
	}

	err = db.AutoMigrate(&ProcessedReference{})
	if err != nil {
		return nil, err
	}

	err = db.AutoMigrate(&ReferenceEmbedding{})
	if err != nil {
		return nil, err
	}
	return db, nil
}
