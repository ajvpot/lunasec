
scalar uuid
scalar jsonb


type Query {
    """ get s3 presigned url for manifest upload, used by the CLI """
    presignSbomUpload(
        orgId: uuid!
        buildId: uuid!
    ): SbomUploadUrlOutput
    sbomUrl(
        buildId: uuid!
    ): String
    authenticatedRepoCloneUrl(
        repoGithubId: Int!
    ): AuthenticatedRepoCloneUrlOutput
    fakeQueryToHackHasuraBeingABuggyMess: String
    availableOrgsWithRepos: [OrgWithRepos!]
    vulnerableReleasesFromBuild(buildId: uuid!): VulnerableReleases
}

type Mutation {
    """ get s3 presigned url for manifest upload, used only by the frontend """
    presignManifestUpload(
        project_id: uuid!
    ): PresignedUrlResponse
    installSelectedRepos(
        orgs: [OrgsWithReposInput!]!
    ): InstallSelectedReposResponse
}

input OrgsWithReposInput {
    id: String!
    repos: [Int!]!
}

type InstallSelectedReposResponse {
    success: Boolean
}

input SbomUploadUrlInput {
    orgId: uuid!
    projectId: uuid!
}


type SbomUploadUrlOutput {
    error: Boolean!
    uploadUrl: UploadUrl
}

type PresignedUrlResponse {
    url: String!
    headers: jsonb!
    key: String!
    bucket: String!
}

type UploadUrl {
    url: String!
    headers: jsonb!
}

type AuthenticatedRepoCloneUrlOutput {
    url: String
}

type GithubRepository {
    orgName: String!
    orgId: Int!
    orgNodeId: String!
    repoName: String!
    repoId: Int!
    repoNodeId: String!
    gitUrl: String!
    ownerType: String!
    cloneUrl: String!
defaultBranch: String!
}

type OrgWithRepos {
    organizationName: String!
    id: String!
    repos: [GithubRepository!]!
}



type BuildData_VulnerableReleases {
    devOnly: Boolean!
    severity: String
    cvss: Float
    affectedBy: [BuildData_AffectedByVulnerability!]!
    release: Release
}


type BuildData_AffectedByVulnerability {
    vulnerability: BuildData_Vulnerability!
    ranges: [BuildData_Range]
    triviallyUpdatable: Boolean
    chains: [[BuildData_DependencyNode!]!]!
}

type BuildData_DependencyNode {
    id: String
}

type BuildData_Range {
    introduced: String
    fixed: String
}

# interface Release {
#  id: string;
#  version: string;
#  package: Package;
#}

type BuildData_Release {
    id: String!
    version: String!
    package: BuildData_Package!
}

#interface Package {
#  affected_by_vulnerability: Array<AffectedByVulnerability>;
#  name: string;
#  package_manager: string;
#}
type BuildData_Package {
    name: String!
    package_manager: String!
    affected_by_vulnerability: [BuildData_AffectedByVulnerability!]
}


type BuildData_Vulnerability {
    id: String!
    severity_name: String
    cvss_score: Float
}

type BuildData_AffectedByVulnerability {

}
type BuildData_AffectedByVulnerability {

}
