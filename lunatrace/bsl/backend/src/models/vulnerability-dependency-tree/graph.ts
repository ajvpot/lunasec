/*
 * Copyright by LunaSec (owned by Refinery Labs, Inc)
 *
 * Licensed under the Business Source License v1.1
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 * https://github.com/lunasec-io/lunasec/blob/master/licenses/BSL-LunaTrace.txt
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
export class Graph {
  private forwardEdges: Map<string, string> = new Map();
  private backwardEdges: Map<string, Set<string>> = new Map();
  private childToEdgeIds: Map<string, Set<string>> = new Map();

  public insertEdge(id: string, parent: string, child: string) {
    this.forwardEdges.set(parent, child);

    const existingParentEdges = this.backwardEdges.get(child);
    if (!existingParentEdges) {
      this.backwardEdges.set(child, new Set([parent]));
    } else {
      existingParentEdges.add(parent);
    }

    const existingEdgesToChild = this.childToEdgeIds.get(child);
    if (!existingEdgesToChild) {
      this.childToEdgeIds.set(child, new Set([id]));
    } else {
      existingEdgesToChild.add(id);
    }
  }

  public inboundNeighbors(child: string) {
    return this.backwardEdges.get(child) || new Set();
  }

  public inboundEdges(child: string) {
    return this.childToEdgeIds.get(child) || new Set();
  }
}
