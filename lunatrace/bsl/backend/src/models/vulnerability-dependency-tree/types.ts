export interface VulnerableEdge {
  edgeId: string;
  vulnerabilityIds: string[];
}

export interface Manifest {
  path?: string | null;
  child_edges_recursive?: ManifestEdge[] | null;
}
export interface ManifestEdge {
  child_id: string;
  parent_id: string;
  id: string;
  child: ManifestNode;
}

export interface ManifestNode {
  id: string;
  range: string;
  release_id: string;
  release: ManifestRelease;
  labels?: Record<string | number | symbol, unknown>;
}

export interface ManifestRelease {
  id: string;
  version: string;
  package: ManifestReleasePackage;
}

interface ManifestReleasePackage {
  affected_by_vulnerability: PackageVulnerability[];
  name: string;
  package_manager: string;
}

export interface RawGuide {
  id: string;
  title: string;
  summary: string;
}

export interface PackageVulnerability {
  vulnerability: {
    id: string;
    severity_name?: string | null;
    cvss_score?: number | null;
    source: string;
    source_id: string;
    summary?: string | null;
    guide_vulnerabilities: Array<{ guide: VulnerabilityGuide }>;
  };
  ranges: PackageVulnerabilityRange[];
}

interface PackageVulnerabilityRange {
  introduced?: string | null;
  fixed?: string | null;
}

export interface VulnerabilityGuide {
  id: string;
  title: string;
  summary: string;
}

export interface IgnoredVulnerability {
  vulnerability_id: string;
  locations: string[];
  note: string;
}

export type DependencyChain = ManifestNode[];

export interface TriagedPackageVulnerability extends PackageVulnerability {
  trivially_updatable_to: string | null; // We add this by determining something can be updated to a non-vulnerable version without violating semver
  path: string;
  beneath_minimum_severity: boolean;
  fix_versions: string[];
  ignored: boolean;
  ignored_vulnerability: IgnoredVulnerability | undefined;
}

export interface VulnerableRelease {
  release: ManifestRelease;
  severity: string;
  beneath_minimum_severity: boolean; // if all its vulns are beneath severity, mark the release as beneath severity as well
  chains: DependencyChain[];
  cvss: number | null; // the highest rating from all the vulns on the release, used for giving the user an at-a-glance rating
  dev_only: boolean;
  affected_by: TriagedPackageVulnerability[];
  trivially_updatable: 'no' | 'partially' | 'yes';
  paths: string[];
  guides: RawGuide[];
  fix_versions: string[];
}
