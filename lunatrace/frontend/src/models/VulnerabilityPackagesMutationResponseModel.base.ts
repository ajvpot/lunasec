/* This is a mst-gql generated file, don't modify it manually */
/* eslint-disable */
/* tslint:disable */

import { types } from "mobx-state-tree"
import { QueryBuilder } from "mst-gql"
import { ModelBase } from "./ModelBase"
import { VulnerabilityPackagesModel, VulnerabilityPackagesModelType } from "./VulnerabilityPackagesModel"
import { VulnerabilityPackagesModelSelector } from "./VulnerabilityPackagesModel.base"
import { RootStoreType } from "./index"


/**
 * VulnerabilityPackagesMutationResponseBase
 * auto generated base class for the model VulnerabilityPackagesMutationResponseModel.
 *
 * response of any mutation on the table "vulnerability_packages"
 */
export const VulnerabilityPackagesMutationResponseModelBase = ModelBase
  .named('VulnerabilityPackagesMutationResponse')
  .props({
    __typename: types.optional(types.literal("vulnerability_packages_mutation_response"), "vulnerability_packages_mutation_response"),
    /** number of rows affected by the mutation */
    affected_rows: types.union(types.undefined, types.integer),
    /** data from the rows affected by the mutation */
    returning: types.union(types.undefined, types.array(types.late((): any => VulnerabilityPackagesModel))),
  })
  .views(self => ({
    get store() {
      return self.__getStore<RootStoreType>()
    }
  }))

export class VulnerabilityPackagesMutationResponseModelSelector extends QueryBuilder {
  get affected_rows() { return this.__attr(`affected_rows`) }
  returning(builder?: string | VulnerabilityPackagesModelSelector | ((selector: VulnerabilityPackagesModelSelector) => VulnerabilityPackagesModelSelector)) { return this.__child(`returning`, VulnerabilityPackagesModelSelector, builder) }
}
export function selectFromVulnerabilityPackagesMutationResponse() {
  return new VulnerabilityPackagesMutationResponseModelSelector()
}

export const vulnerabilityPackagesMutationResponseModelPrimitives = selectFromVulnerabilityPackagesMutationResponse().affected_rows
