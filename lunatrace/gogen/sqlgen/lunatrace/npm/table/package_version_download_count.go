//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PackageVersionDownloadCount = newPackageVersionDownloadCountTable("npm", "package_version_download_count", "")

type packageVersionDownloadCountTable struct {
	postgres.Table

	//Columns
	Name      postgres.ColumnString
	ReleaseID postgres.ColumnString
	Version   postgres.ColumnString
	Downloads postgres.ColumnInteger
	Day       postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PackageVersionDownloadCountTable struct {
	packageVersionDownloadCountTable

	EXCLUDED packageVersionDownloadCountTable
}

// AS creates new PackageVersionDownloadCountTable with assigned alias
func (a PackageVersionDownloadCountTable) AS(alias string) *PackageVersionDownloadCountTable {
	return newPackageVersionDownloadCountTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PackageVersionDownloadCountTable with assigned schema name
func (a PackageVersionDownloadCountTable) FromSchema(schemaName string) *PackageVersionDownloadCountTable {
	return newPackageVersionDownloadCountTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PackageVersionDownloadCountTable with assigned table prefix
func (a PackageVersionDownloadCountTable) WithPrefix(prefix string) *PackageVersionDownloadCountTable {
	return newPackageVersionDownloadCountTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PackageVersionDownloadCountTable with assigned table suffix
func (a PackageVersionDownloadCountTable) WithSuffix(suffix string) *PackageVersionDownloadCountTable {
	return newPackageVersionDownloadCountTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPackageVersionDownloadCountTable(schemaName, tableName, alias string) *PackageVersionDownloadCountTable {
	return &PackageVersionDownloadCountTable{
		packageVersionDownloadCountTable: newPackageVersionDownloadCountTableImpl(schemaName, tableName, alias),
		EXCLUDED:                         newPackageVersionDownloadCountTableImpl("", "excluded", ""),
	}
}

func newPackageVersionDownloadCountTableImpl(schemaName, tableName, alias string) packageVersionDownloadCountTable {
	var (
		NameColumn      = postgres.StringColumn("name")
		ReleaseIDColumn = postgres.StringColumn("release_id")
		VersionColumn   = postgres.StringColumn("version")
		DownloadsColumn = postgres.IntegerColumn("downloads")
		DayColumn       = postgres.TimestampzColumn("day")
		allColumns      = postgres.ColumnList{NameColumn, ReleaseIDColumn, VersionColumn, DownloadsColumn, DayColumn}
		mutableColumns  = postgres.ColumnList{NameColumn, ReleaseIDColumn, VersionColumn, DownloadsColumn, DayColumn}
	)

	return packageVersionDownloadCountTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Name:      NameColumn,
		ReleaseID: ReleaseIDColumn,
		Version:   VersionColumn,
		Downloads: DownloadsColumn,
		Day:       DayColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
