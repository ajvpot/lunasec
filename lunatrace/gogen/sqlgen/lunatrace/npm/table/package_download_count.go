//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PackageDownloadCount = newPackageDownloadCountTable("npm", "package_download_count", "")

type packageDownloadCountTable struct {
	postgres.Table

	//Columns
	Name      postgres.ColumnString
	Day       postgres.ColumnTimestampz
	Downloads postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PackageDownloadCountTable struct {
	packageDownloadCountTable

	EXCLUDED packageDownloadCountTable
}

// AS creates new PackageDownloadCountTable with assigned alias
func (a PackageDownloadCountTable) AS(alias string) *PackageDownloadCountTable {
	return newPackageDownloadCountTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PackageDownloadCountTable with assigned schema name
func (a PackageDownloadCountTable) FromSchema(schemaName string) *PackageDownloadCountTable {
	return newPackageDownloadCountTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PackageDownloadCountTable with assigned table prefix
func (a PackageDownloadCountTable) WithPrefix(prefix string) *PackageDownloadCountTable {
	return newPackageDownloadCountTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PackageDownloadCountTable with assigned table suffix
func (a PackageDownloadCountTable) WithSuffix(suffix string) *PackageDownloadCountTable {
	return newPackageDownloadCountTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPackageDownloadCountTable(schemaName, tableName, alias string) *PackageDownloadCountTable {
	return &PackageDownloadCountTable{
		packageDownloadCountTable: newPackageDownloadCountTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newPackageDownloadCountTableImpl("", "excluded", ""),
	}
}

func newPackageDownloadCountTableImpl(schemaName, tableName, alias string) packageDownloadCountTable {
	var (
		NameColumn      = postgres.StringColumn("name")
		DayColumn       = postgres.TimestampzColumn("day")
		DownloadsColumn = postgres.IntegerColumn("downloads")
		allColumns      = postgres.ColumnList{NameColumn, DayColumn, DownloadsColumn}
		mutableColumns  = postgres.ColumnList{NameColumn, DayColumn, DownloadsColumn}
	)

	return packageDownloadCountTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Name:      NameColumn,
		Day:       DayColumn,
		Downloads: DownloadsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
