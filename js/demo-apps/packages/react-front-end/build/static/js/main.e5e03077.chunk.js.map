{"version":3,"sources":["../../../src/tokenizer.ts","../../../../src/style-patcher/dom-utils.ts","../../../src/aws.ts","../../../../src/utils/async.ts","../../../../src/utils/random.ts","../../../../src/rpc/types.ts","../../../../src/utils/json.ts","../../../../src/style-patcher/constants.ts","../../../../src/lib/http.ts","../../../../src/rpc/index.ts","../../../../src/rpc/frame-message-creator.ts","../../../../src/rpc/listener.ts","../../../../src/style-patcher/index.ts","../../../../src/style-patcher/read.ts","../../../../src/style-patcher/write.ts","../../../../src/utils/index.ts","../../../../src/utils/element-event-triggers.ts","../../../../src/utils/to-camel-case.ts","../../../../src/auth/authentication.ts","../../../../src/auth/auth-client.ts","../../../src/index.ts","../../../../../src/components/elements/downloader.tsx","../../../../../src/components/elements/input.tsx","../../../../../src/components/elements/paragraph.tsx","../../../../../src/components/elements/textarea.tsx","../../../../../src/components/elements/uploader.tsx","../../../../src/providers/LunaSecConfigContext.ts","../../../../src/providers/SecureFormContext.ts","../../../../src/utils/set-native-value.ts","../../../../src/components/wrapComponent.tsx","../../../../src/components/SecureForm.tsx","static/logo.svg","common/components/Home.tsx","common/express-transport.ts","common/graphql-transport.ts","common/store.ts","common/components/Login.tsx","common/components/Signup.tsx","common/App.tsx","common/components/secure-components/SecureInputDemo.tsx","common/components/secure-components/SecureUploadDemo.tsx","common/components/secure-components/SecureParagraphDemo.tsx","common/components/secure-components/SecureDownloadDemo.tsx","common/components/secure-components/SecureTextAreaDemo.tsx","common/components/Header.tsx","common/components/SideMenu.tsx","../../../src/simple-tokenizer.ts","simple-tokenizer/components/configureTokenizer.ts","simple-tokenizer/components/secure-components/Detokenize.tsx","simple-tokenizer/components/secure-components/TokenizeDemo.tsx","simple-tokenizer/App.tsx","index.tsx","../../../src/lunasec-error.ts","../../../src/scrub-properties.ts","../../../src/constants.ts","../../../../src/generated/base.ts","../../../../src/generated/common.ts","../../../../src/generated/api.ts","../../../../src/generated/configuration.ts"],"names":["Tokenizer","config","this","JSON","parse","stringify","Object","assign","headers","jwtToken","authenticationToken","reqOptions","openAPIConfig","basePath","url","axiosInstance","a","create","openApi","undefined","e","Error","success","error","constructError","response","errorWithCoercedType","data","name","message","errorMessage","code","status","toString","sessionId","tokenId","customDuration","setGrant","res","handleError","verifyGrant","valid","getMetaData","metadata","input","tokenize","uploadUrl","detokenizeToUrl","downloadUrl","value","lockToSession","sessionHash","detokenize","sessionError","handleSessionHashTracking","token","metaPromise","getMetadata","urlPromise","Promise","all","metaRes","urlRes","meta","dataType","fileMeta","fileinfo","fileInfo","filename","options","lastModified","type","get","responseType","file","File","detokenizeToFileInfo","fileInfoRes","detokenizeFileFromFileInfo","customMetadata","arrayBuffer","arrayBuf","buf","Buffer","from","Uint8Array","customFields","filterStyleWith","style","filterFn","keys","reduce","outputStyle","key","SKIPPED_PROPERTIES","some","skipped","startsWith","el","tagNames","indexOf","tagName","toLowerCase","doc","css","createElement","appendChild","createTextNode","snapshot","i","length","prop","getPropertyValue","ELEMENT_ATTRIBUTE_WHITELIST","property","PARENT_ELEMENT_STYLE_ATTRIBUTES","declarations","hasOwnProperty","call","push","join","target","selector","cssText","id","uploadToS3WithSignedUrl","signedUrl","host","scrubbedHeaders","axios","withCredentials","put","downloadFromS3WithSignedUrl","ms","resolve","setTimeout","crypto","r","getRandomValues","Uint32Array","Array","map","OutboundToInboundMessageValueMap","CommitToken","Attributes","json","SUPPORTED_PSEUDO_SELECTORS","REPLACED_ELEMENTS","VOID_ELEMENTS","NO_GENERATE_CONTENT_ELEMENTS","concat","PLACEHOLDER_ELEMENTS","INLINE_SKIPPED_PROPERTIES","BadHttpResponseError","responseCode","rawData","FrameMessageCreator","lunaSecDomain","frameNonceFilter","notificationCallback","timeout","frameResponses","frameNotificationCallback","command","correlationToken","generateSecureNonce","unknownPost","frameNonce","handleNotificationReceived","handleMessageReceived","notification","notificationTypes","includes","frameContext","startTime","Date","postMessage","getTime","rawResponse","console","rawMessage","convertRawMessageToTypedMessage","window","callback","addEventListener","event","origin","frameMessage","safeParseJson","controller","abortSignal","signal","eventListenerOptions","parsedLunaSecDomain","URL","source","pseudoSelector","computed","getComputedStyle","allStyleInfo","getStyleSnapshot","framedInputStyle","getChildStyle","parentStyle","getParentStyle","display","content","debug","width","getBoundingClientRect","height","allPseudoStyleInfo","childStyle","pseudo","styleInfo","generateCssText","nodeName","boxSizing","maxWidth","minWidth","createEvent","eventType","bubbles","document","initEvent","Event","cancelable","element","focus","dispatchEvent","blur","preserveCamelCase","str","locale","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","toLocaleLowerCase","toLocaleUpperCase","preserveConsecutiveUppercase","replace","m1","postProcess","_","p1","m","toCamelCase","pascalCase","isArray","x","trim","filter","charAt","obj","camelCaseObj","lastAuthenticatedTime","authFlowInProgress","log","__DEBUG_LUNASEC_AUTH__","LunaSecAuthentication","authDomain","errorHandler","sessionAuthProvider","authClient","SecureFrameAuthClient","LunaSecError","authenticateSession","timer","setInterval","catch","clearInterval","now","validateOrCreateSession","ensureSession","verifySession","verifyResponse","path","resp","fetch","getURL","credentials","mode","processResponse","authProvider","authProviderOption","redirect","props","renderData","mountedCallback","frameStyleInfo","frameStyle","iframeStyle","ref","frameRef","src","frameUrl","className","frameClass","frameBorder","children","otherProps","containerClass","parentContainerStyle","dummyRef","dummyElementStyle","tabIndex","renderFrame","scrubbedProps","inputRef","flexGrow","dummyInputStyleRef","hiddenElementClass","position","margin","marginBlock","validatedName","containerName","frameId","textareaClass","LunaSecConfigContext","createContext","authenticationErrorHandler","SecureFormContext","addTokenCommitCallback","removeTokenCommitCallback","submit","setNativeValue","componentName","nativePropertyDescriptor","getOwnPropertyDescriptor","HTMLInputElement","prototype","HTMLTextAreaElement","set","WrapComponent","UnstyledWrappedParam","componentNameParam","UnstyledWrapped","Wrapped","WrappedComponent","isInputLike","frameReadyForListening","throwIfLunaSecConfigNotSet","throwIfErrorHandlerNotSet","createRef","formContext","lunaSecConfigContext","messageCreator","auth","state","frameFullyLoaded","sessionAuthenticated","isValid","abortController","AbortController","postReceived","startSessionManagement","then","abortSessionCallback","setState","stopSessionManagement","generateElementStyle","triggerTokenCommit","currentDummy","current","abort","sendIFrameAttributes","styleRef","top","left","lunaConf","frameURL","searchParams","location","onValidate","attrs","component","dummyElement","inputType","getAttribute","lastTokenSent","fileTokens","placeholder","validator","frameAttributes","generateIFrameAttributes","createMessageToFrame","contentWindow","sendMessageToFrameWithReply","onTokenChange","validationHandler","currentlyFocusedElement","activeElement","currentFrame","zIndex","generateUrl","hidden","invalid","wrappedComponentDidMount","bind","opacity","resize","propsForWrapped","IgnoredWrapped","renderLoadingOverlay","contextType","Consumer","tokenCommitCallbacks","form","preventDefault","commitPromises","triggerCommit","onSubmit","Provider","cb","useStyles","makeStyles","LogoImg","paddingBottom","Home","classes","Grid","item","xs","Card","CardContent","alt","logo","Typography","href","rel","CardHeader","title","Divider","Box","mt","defaults","expressUrl","process","documents","post","username","password","ssn_token","expressTransport","signup","login","saveSsn","loadUser","loadDocuments","uploadDocumentTokens","link","createHttpLink","uri","apollo","ApolloClient","cache","InMemoryCache","defaultOptions","query","fetchPolicy","mutate","variables","mutation","gql","setSsn","getCurrentUser","getDocuments","unwrappedDocumentTokens","result","setDocuments","graphQlTransport","store","createStore","user","loggedIn","setUser","action","ssn","thunk","actions","transport","getState","currentUser","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","theme","spacing","center","flexDirection","justifyContent","padding","componentLookup","history","useHistory","useState","setError","setUsername","setPassword","loginThunk","hash","Paper","FormControl","FormLabel","TextField","label","onChange","fullWidth","autoFocus","required","FormHelperText","Button","variant","color","textTransform","signupThunk","match","useRouteMatch","params","secureinput","showSaveSuccessful","setShowSaveSuccessful","setSsnToken","ssnValid","setSsnValid","uploadFormData","secureInputProps","someCustom","Alert","onClose","severity","AlertTitle","handleFormSubmit","FormGroup","htmlFor","helperText","InputProps","inputComponent","SecureInput","inputProps","sx","secureupload","saveSuccessful","setSaveSuccessful","useEffect","loadDocumentsAction","saveDocuments","SecureUpload","tokens","customField","onClick","secureparagraph","SecureParagraph","securedownload","SecureDownload","securetextarea","textAreaToken","setTextAreaToken","_e","SecureTextArea","whiteSpace","RenderDemoComponent","useParams","DemoComponent","DedicatedPassportReactApp","exact","createStyles","appBar","drawer","toggleButtonGroup","backgroundColor","marginRight","Header","AppBar","Toolbar","noWrap","ToggleButtonGroup","exclusive","_event","encodeURIComponent","ToggleButton","flexShrink","drawerPaper","toolbar","mixins","RenderLoginSignupLinks","renderListItem","VpnKey","LockOpen","icon","page","text","routeMatch","selected","ListItem","button","NavLink","to","ListItemIcon","ListItemText","primary","RenderSecureComponentLinks","Lock","ChatBubbleOutline","FormatTextdirectionLToR","CloudUpload","GetApp","SideMenu","Drawer","paper","List","baseRoute","tokenizer","metaEncoding","SimpleTokenizer","DetokenizeDemo","loadSsn","tokenizerResponse","TokenizeDemo","SimpleApp","root","main","AppContainer","useLocation","pathname","split","getTransport","render","CssBaseline","ReactDOM","StrictMode","getElementById","scrubProperties","propsToRemove","newObj","forEach","CONFIG_DEFAULTS","LUNASEC_TOKEN_REGEXP","SESSION_HASH_HEADER","AUTHORIZATION_HEADER","BASE_PATH","configuration","field","msg","DUMMY_BASE_URL","functionName","paramName","paramValue","URLSearchParams","search","objects","object","delete","append","serializeDataIfNeeded","requestOptions","nonString","isJsonMime","toPathString","createRequestFunction","axiosArgs","globalAxios","axiosRequestArgs","request","localVarAxiosParamCreator","detokenizeRequest","localVarUrlObj","baseOptions","localVarRequestOptions","method","localVarQueryParameter","localVarHeaderParameter","headersFromBaseOptions","getMetadataRequest","setGrantRequest","tokenizeRequest","verifyGrantRequest","localVarAxiosArgs","param","apiKey","accessToken","formDataCtor","mime","jsonMime","RegExp"],"mappings":"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CA,cACA,eACA,aACA,aACA,YAEA,WACA,QACA,MACA,iBACA,SAGW,EAAAF,4BAA8B,CACzC,gBACA,cACA,aACA,sBACA,wBACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,wBACA,wBACA,oBACA,kBACA,yBACA,yBACA,yBACA,2BACA,2BACA,2BACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,wBACA,0BACA,sBACA,sBACA,qBACA,sBACA,qBACA,0BACA,0BACA,0BACA,4BACA,4BACA,4BACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,iBACA,0BACA,4BACA,mBACA,yBACA,0BACA,mBACA,mBACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,cACA,QACA,OACA,YACA,YACA,QACA,eACA,sBACA,8BACA,eACA,cACA,aACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,oBACA,gBACA,cACA,SACA,YACA,oBACA,OACA,eACA,YACA,SACA,cACA,gBACA,cACA,wBACA,eACA,yBACA,sBACA,YACA,mBACA,eACA,aACA,iBACA,eACA,0BACA,oBACA,0BACA,yBACA,uBACA,wBACA,0BACA,cACA,UACA,oBACA,kBACA,WACA,cACA,kBACA,oBACA,mBACA,qBACA,iBACA,iBACA,aACA,cACA,mBACA,sBACA,kBACA,aACA,aACA,eACA,OACA,YACA,iBACA,aACA,YACA,cACA,gBACA,kBACA,kBACA,cACA,YACA,YACA,iBACA,aACA,kBACA,gBACA,kBACA,cACA,gBACA,QACA,gBACA,iBACA,gBACA,gBACA,WACA,kBACA,iBACA,kBACA,gBACA,aACA,aACA,4BACA,6BACA,wBACA,wBACA,oBACA,sBACA,iBACA,qBACA,uBACA,eACA,gBACA,cACA,mBACA,oBACA,cACA,qBACA,iBACA,SACA,IACA,SACA,SACA,UACA,aACA,gBACA,QACA,kBACA,0BACA,4BACA,uBACA,2BACA,6BACA,qBACA,sBACA,oBACA,2BACA,6BACA,wBACA,4BACA,8B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","file":"static/js/main.e5e03077.chunk.js","sourcesContent":["/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { OutgoingHttpHeaders } from 'http';\n\nimport { LunaSecError } from '@lunasec/isomorphic-common';\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nimport { FileWithPath } from 'react-dropzone';\n\nimport { downloadFromS3WithSignedUrl, uploadToS3WithSignedUrl } from './aws';\nimport { AUTHORIZATION_HEADER, CONFIG_DEFAULTS, SESSION_HASH_HEADER } from './constants';\nimport { Configuration, DefaultApi, ErrorResponse, ErrorResponseError, MetaData } from './generated';\nimport {\n  FileInfo,\n  SuccessOrFailOutput,\n  TokenizerClientConfig,\n  TokenizerDetokenizeFileInfo,\n  TokenizerDetokenizeFileResponse,\n  TokenizerDetokenizeResponse,\n  TokenizerDetokenizeToUrlResponse,\n  TokenizerFailApiResponse,\n  TokenizerGetMetadataResponse,\n  TokenizerTokenizeResponse,\n  TokenizerVerifyGrantResponse,\n} from './types';\n\n// Uses an openAPI generated client to query the tokenizer.  The biggest gotchas here are that:\n// 1) Axios returns an res object with the tokenizer's response on the 'data' property, but the tokenizer also wraps its responses with 'data'\n// So the actual response body is res.data.data.  We handle that here\n// 2) Axios throws for any non 200 response code, and then we lose the typing of the error response, so we catch and then stick it back on.\n\nexport class Tokenizer {\n  readonly config!: TokenizerClientConfig;\n  readonly openApi: DefaultApi;\n  private reqOptions: { headers: OutgoingHttpHeaders };\n\n  constructor(config: Partial<TokenizerClientConfig>) {\n    // Deep clone config for mutation safety.\n    this.config = JSON.parse(JSON.stringify(Object.assign({}, CONFIG_DEFAULTS, config)));\n\n    const headers: OutgoingHttpHeaders = {\n      'Content-Type': 'application/json',\n    };\n    const jwtToken = this.config.authenticationToken;\n    if (jwtToken) {\n      headers[AUTHORIZATION_HEADER] = jwtToken;\n    }\n    this.reqOptions = { headers }; // This is passed to the openapi client on every request\n\n    // openapi stuff\n    const openAPIConfig = new Configuration({ basePath: this.config.url });\n    const axiosInstance = axios.create({});\n    this.openApi = new DefaultApi(openAPIConfig, undefined, axiosInstance);\n  }\n\n  private handleError(e: AxiosError | Error | unknown): TokenizerFailApiResponse {\n    if (!(e instanceof Error)) {\n      // this will likely never happen but TS makes you handle it\n      throw e;\n    }\n    // this will be what happens\n    return {\n      success: false,\n      error: this.constructError(e),\n    };\n  }\n\n  private constructError(e: AxiosError<ErrorResponse> | Error): LunaSecError {\n    if ('response' in e && e.response) {\n      const errorWithCoercedType = e.response.data.error as ErrorResponseError & {\n        errorMessage?: string;\n      };\n\n      // Parse the axios error, if it has any meaningful data about the response\n      return new LunaSecError({\n        name: e.response.data.error.name || 'TokenizerError',\n        // TODO: Update this to \"message\" to conform with openAPI spec once the Tokenizer Backend uses OpenAPI\n        message: errorWithCoercedType.message || errorWithCoercedType.errorMessage || 'Unknown Tokenizer Error',\n        code: e.response.status.toString(),\n      });\n    }\n    if (e instanceof Error) {\n      return new LunaSecError(e); // This can handle axios errors where we dont even get a response, or any other case\n    }\n    return new LunaSecError({ name: 'unknownTokenizerError', message: 'Unknown Tokenization Error', code: '500' });\n  }\n\n  public async createGrant(sessionId: string, tokenId: string, customDuration?: string) {\n    try {\n      const res = await this.openApi.setGrant(\n        {\n          sessionId,\n          tokenId,\n          customDuration,\n        },\n        this.reqOptions\n      );\n      return {\n        success: res.data.success,\n      };\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n\n  async verifyGrant(sessionId: string, tokenId: string): SuccessOrFailOutput<TokenizerVerifyGrantResponse> {\n    try {\n      const res = await this.openApi.verifyGrant(\n        {\n          sessionId,\n          tokenId,\n        },\n        this.reqOptions\n      );\n      return {\n        success: true,\n        valid: res.data.data.valid,\n      };\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n\n  async getMetadata(tokenId: string): SuccessOrFailOutput<TokenizerGetMetadataResponse> {\n    try {\n      const res = await this.openApi.getMetaData(\n        {\n          tokenId,\n        },\n        this.reqOptions\n      );\n      return {\n        success: true,\n        metadata: res.data.data.metadata,\n        tokenId: tokenId, // Not sure why we pass this back, seems useless in this context\n      };\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n\n  async tokenize(input: string | Buffer, metadata: MetaData): SuccessOrFailOutput<TokenizerTokenizeResponse> {\n    try {\n      const res = await this.openApi.tokenize(\n        {\n          metadata,\n        },\n        this.reqOptions\n      );\n      const data = res.data.data;\n      await uploadToS3WithSignedUrl(data.uploadUrl, data.headers as OutgoingHttpHeaders, input);\n\n      return {\n        success: true,\n        tokenId: data.tokenId,\n      };\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n\n  async detokenize(tokenId: string): SuccessOrFailOutput<TokenizerDetokenizeResponse> {\n    const response = await this.detokenizeToUrl(tokenId);\n\n    if (!response.success) {\n      return response;\n    }\n    const { headers, downloadUrl } = response;\n    return {\n      success: true,\n      tokenId: tokenId,\n      value: await downloadFromS3WithSignedUrl(downloadUrl, headers),\n    };\n  }\n\n  /**\n   * Binds this instance of the tokenizer to a session so that any requests after the first detokenization will include\n   * a hash generated by the Tokenizer Backend as a header.  Any requests that include a hash not matching the current session\n   * will not be honored by the Backend, locking this tokenizer to the session of the first request it made\n   */\n  private handleSessionHashTracking(response: AxiosResponse): { success: false; error: LunaSecError } | null {\n    if (!this.config.lockToSession) {\n      return null;\n    }\n    // already bound to a session\n    if (this.reqOptions.headers[SESSION_HASH_HEADER]) {\n      return null;\n    }\n    const sessionHash = response.headers[SESSION_HASH_HEADER] as string | undefined;\n    if (sessionHash === undefined) {\n      return {\n        success: false,\n        error: new LunaSecError({\n          name: 'detokenizationiFrameSessionBinding',\n          message: 'session hash was not set in response when detokenizing, unable to bind iFrame to a session',\n          code: '500',\n        }),\n      };\n    }\n    this.reqOptions.headers[SESSION_HASH_HEADER] = sessionHash;\n    return null;\n  }\n\n  async detokenizeToUrl(tokenId: string): SuccessOrFailOutput<TokenizerDetokenizeToUrlResponse> {\n    try {\n      const response = await this.openApi.detokenize(\n        {\n          tokenId,\n        },\n        this.reqOptions\n      );\n      const sessionError = this.handleSessionHashTracking(response);\n      if (sessionError) {\n        return sessionError;\n      }\n\n      const res = response.data;\n\n      if (!res.data) {\n        return {\n          success: false,\n          error: new LunaSecError({\n            name: 'badDetokenizeResponse',\n            message: 'Invalid response from Tokenizer when detokenizing data',\n            code: '500',\n          }),\n        };\n      }\n\n      const { downloadUrl, headers } = res.data;\n      return {\n        success: true,\n        tokenId: tokenId,\n        headers: headers as Record<string, string>,\n        downloadUrl: downloadUrl,\n      };\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n\n  /**\n   * // Fetches file info and pre-signed URL needed to start a file download.\n   * Useful when we want to prepare the option to start a download but not yet start one.\n   * Grabs the file URL and metadata in parallel.  Similar to detokenizeToUrl but for files\n   * @param token\n   */\n  async detokenizeToFileInfo(token: string): SuccessOrFailOutput<TokenizerDetokenizeFileInfo> {\n    const metaPromise = this.getMetadata(token);\n    // TODO: make this function able to skip detokenizing to URL optionally because sometimes we dont need it.\n    const urlPromise = this.detokenizeToUrl(token);\n    const [metaRes, urlRes] = await Promise.all([metaPromise, urlPromise]);\n    if (!metaRes.success) {\n      return metaRes;\n    }\n    if (!urlRes.success) {\n      return urlRes;\n    }\n\n    const meta = metaRes.metadata;\n\n    if (meta.dataType !== 'file' || !('fileinfo' in meta)) {\n      return {\n        success: false,\n        error: new LunaSecError({\n          name: 'wrongMetaDataType',\n          code: '400',\n          message: \"Couldn't find metadata information for a file, it may have been the wrong type of token.\",\n        }),\n      };\n    }\n\n    const fileMeta = meta.fileinfo;\n    const fileInfo: FileInfo = {\n      filename: fileMeta.filename,\n      options: {\n        lastModified: fileMeta.lastModified,\n        type: fileMeta.type,\n      },\n      headers: urlRes.headers,\n      url: urlRes.downloadUrl,\n    };\n    return {\n      success: true,\n      fileInfo,\n    };\n  }\n\n  /**\n   * BROWSER ONLY\n   * Triggers a download of a file that we already got the file info for using getFileInfo\n   * @param fileInfo LunaSec's custom FileInfo object which tells us about the tokenized file\n   */\n  async detokenizeFileFromFileInfo(fileInfo: FileInfo): SuccessOrFailOutput<TokenizerDetokenizeFileResponse> {\n    const axiosInstance = axios.create();\n    try {\n      const res = await axiosInstance.get(fileInfo.url, {\n        headers: fileInfo.headers,\n        responseType: 'blob',\n      });\n      return {\n        success: true,\n        file: new File([res.data], fileInfo.filename, fileInfo.options),\n      };\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n\n  /**\n   * BROWSER ONLY\n   * Takes a token and downloads and returns a File object, complete with proper name, mime type, and lastModified fields\n   * @param token\n   */\n  async detokenizeFile(token: string): SuccessOrFailOutput<TokenizerDetokenizeFileResponse> {\n    const fileInfoRes = await this.detokenizeToFileInfo(token);\n    if (!fileInfoRes.success) {\n      return fileInfoRes;\n    }\n    return this.detokenizeFileFromFileInfo(fileInfoRes.fileInfo);\n  }\n\n  /**\n   * BROWSER ONLY\n   * uploads a file into LunaSec and returns a tokenId, just like `tokenize`\n   * @param file\n   * @param customMetadata\n   */\n  async tokenizeFile(\n    file: File | FileWithPath,\n    customMetadata?: Record<string, unknown>\n  ): SuccessOrFailOutput<TokenizerTokenizeResponse> {\n    try {\n      const arrayBuf = await file.arrayBuffer();\n      // Turn the JS ArrayBuffer into a Node type Buffer for tokenizer\n      // todo: try skipping this\n      const buf = Buffer.from(new Uint8Array(arrayBuf));\n      const meta: MetaData = {\n        dataType: 'file',\n        fileinfo: {\n          filename: file.name,\n          type: file.type,\n          lastModified: file.lastModified,\n        },\n        customFields: customMetadata,\n      };\n      return this.tokenize(buf, meta);\n    } catch (e) {\n      return this.handleError(e);\n    }\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { ELEMENT_ATTRIBUTE_WHITELIST, PARENT_ELEMENT_STYLE_ATTRIBUTES, SKIPPED_PROPERTIES } from './constants';\nimport { StyleSnapshot, SupportedElement, SupportedElementTagName, SupportedElementTagNameMap } from './types';\n\nexport function isTagName<T extends SupportedElementTagName>(\n  el: SupportedElement,\n  tagNames: T[]\n): el is SupportedElementTagNameMap[T] {\n  return (tagNames as string[]).indexOf(el.tagName.toLowerCase()) !== -1;\n}\n\nexport function createStyleElement(doc: Document, css: string): HTMLStyleElement {\n  const style = doc.createElement('style');\n  style.appendChild(doc.createTextNode(css));\n\n  return style;\n}\n\nexport function getStyleSnapshot(style: CSSStyleDeclaration): StyleSnapshot {\n  const snapshot: Record<string, string> = Object.create({});\n  for (let i = 0; i < style.length; i++) {\n    const prop = style[i];\n    snapshot[prop] = style.getPropertyValue(prop);\n  }\n\n  return snapshot;\n}\n\nexport function filterStyleWith(style: StyleSnapshot, filterFn: (key: string) => boolean): StyleSnapshot {\n  return Object.keys(style).reduce((outputStyle, key) => {\n    const shouldSkip = SKIPPED_PROPERTIES.some((skipped) => key.startsWith(skipped));\n    if (shouldSkip) {\n      return outputStyle;\n    }\n\n    if (filterFn(key)) {\n      outputStyle[key] = style[key];\n    }\n\n    return outputStyle;\n  }, {} as StyleSnapshot);\n}\n\nexport function getChildStyle(style: StyleSnapshot) {\n  function filterChildAttributes(key: string) {\n    return ELEMENT_ATTRIBUTE_WHITELIST.some((property) => property === key.toLowerCase());\n  }\n\n  return filterStyleWith(style, filterChildAttributes);\n}\n\nexport function getParentStyle(style: StyleSnapshot) {\n  function filterChildAttributes(key: string) {\n    return PARENT_ELEMENT_STYLE_ATTRIBUTES.some((property) => property === key.toLowerCase());\n  }\n\n  return filterStyleWith(style, filterChildAttributes);\n}\n\nexport function generateCssText(style: StyleSnapshot): string {\n  const declarations = [];\n\n  for (const key in style) {\n    if (!Object.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n    declarations.push(`${key}:${style[key]};`);\n  }\n\n  return declarations.join('');\n}\n\nexport function generatePseudoElementCSS(target: SupportedElement, selector: string, cssText: string): string {\n  if (!cssText) {\n    return '';\n  }\n\n  // TODO: Is this a security issue?\n  return `#${target.id}${selector}{${cssText}}`;\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport * as http from 'http';\n\nimport { BadHttpResponseError } from '@lunasec/server-common';\nimport globalAxios from 'axios';\n\nexport async function uploadToS3WithSignedUrl(\n  signedUrl: string,\n  headers: http.OutgoingHttpHeaders,\n  input: string | Buffer\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { host, ...scrubbedHeaders } = headers;\n  const axios = globalAxios.create({ withCredentials: false }); // create this every time so we can mock it for testing\n  const res = await axios.put(signedUrl, input, {\n    headers: {\n      ...scrubbedHeaders,\n      'Content-Type': 'text/plain', // Needed to get axios to not encode form data and send it raw instead\n    },\n  });\n\n  if (res.status !== 200) {\n    throw new BadHttpResponseError(res.status, res.data);\n  }\n  return;\n}\n\nexport async function downloadFromS3WithSignedUrl(signedUrl: string, headers: http.OutgoingHttpHeaders) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { host, ...scrubbedHeaders } = headers;\n  const axios = globalAxios.create({ withCredentials: false });\n  const res = await axios.get(signedUrl, {\n    headers: scrubbedHeaders,\n  });\n\n  if (res.status !== 200) {\n    throw new BadHttpResponseError(res.status, res.data);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return res.data;\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport function timeout(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport function generateSecureNonce() {\n  if (typeof crypto === 'undefined') {\n    // TODO: Figure out how to do this isomorphically\n    return '12341234';\n  }\n  const r = crypto.getRandomValues(new Uint32Array(4));\n\n  return Array.from(r)\n    .map((i) => i.toString(16))\n    .join('');\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { LunaSecErrorProperties } from '@lunasec/isomorphic-common';\n\nimport { ValidatorName } from '../types';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype CustomMetadata = Record<string, any>;\nexport interface FrameMessage<K, T extends keyof K> {\n  command: T;\n  correlationToken: string;\n  data: K[T];\n}\n// TODO: Get rid of this and replace with a type alias that narrows as we did below with FrameNotifications\nexport interface UnknownFrameMessage {\n  command: string;\n  correlationToken: string;\n  frameNonce?: undefined;\n  data: unknown;\n}\n\n// Tell the iframe to commit its data to the server and send back a token\nexport type CommitTokenMessage = Record<string | number, never>;\n// Initialize or update some attribute of the iframe\n\ninterface BaseAttr {\n  id: string;\n  component: string;\n  style?: string;\n}\n\nexport interface InputAttr extends BaseAttr {\n  component: 'Input';\n  token?: string;\n  type?: string;\n  placeholder?: string;\n  validator?: ValidatorName;\n  customMetadata?: CustomMetadata;\n}\n\nexport interface TextAreaAttr extends BaseAttr {\n  component: 'TextArea';\n  token?: string;\n  type?: string;\n  customMetadata?: CustomMetadata;\n}\n\nexport interface DownloaderAttr extends BaseAttr {\n  component: 'Downloader';\n  token?: string;\n  hidden?: boolean;\n}\n\nexport interface ParagraphAttr extends BaseAttr {\n  component: 'Paragraph';\n  token?: string;\n}\n\nexport interface UploaderAttr extends BaseAttr {\n  component: 'Uploader';\n  fileTokens?: string[];\n  type?: string;\n  customMetadata?: CustomMetadata;\n}\n\nexport type AttributesMessage = InputAttr | DownloaderAttr | ParagraphAttr | UploaderAttr | TextAreaAttr;\n\n// export interface AttributesMessageLookup {\n//   Paragraph: ParagraphAttr;\n//   Downloader: DownloaderAttr;\n//   Uploader: UploaderAttr;\n//   TextArea: TextAreaAttr;\n//   Input: InputAttr;\n// }\n\nexport interface ReceiveCommittedTokenMessage {\n  success: boolean;\n  token?: string;\n  error?: string;\n}\n\nexport interface ReceivedAttributesMessage {\n  success: boolean;\n  error?: string;\n}\n\nexport interface OutboundFrameMessageMap {\n  CommitToken: CommitTokenMessage;\n  Attributes: AttributesMessage;\n}\n\nexport interface InboundFrameMessageMap {\n  ReceiveCommittedToken: ReceiveCommittedTokenMessage;\n  ReceiveAttributesConfirmation: ReceivedAttributesMessage;\n}\n\nexport type OutboundMessageLookupType = {\n  [key in keyof OutboundFrameMessageMap]: keyof InboundFrameMessageMap;\n};\n\nexport interface OutboundToInboundMessageTypeMap extends OutboundMessageLookupType {\n  CommitToken: 'ReceiveCommittedToken';\n}\n\nexport const OutboundToInboundMessageValueMap: OutboundMessageLookupType = {\n  CommitToken: 'ReceiveCommittedToken',\n  Attributes: 'ReceiveAttributesConfirmation',\n};\n\n// FRAME NOTIFICATION TYPES START HERE\n// Frame notifications go from the frame to the outside app and don't receive a reply\n\ninterface BaseFrameNotification {\n  frameNonce: string;\n  correlationToken?: undefined; // Necessary because when Posts come in we don't know if they are a message or a notification\n}\n\nexport interface NotifyOnBlur extends BaseFrameNotification {\n  command: 'NotifyOnBlur';\n  data: Record<string | number, never>;\n}\n\nexport interface NotifyOnStart extends BaseFrameNotification {\n  command: 'NotifyOnStart';\n  data: Record<string | number, never>;\n}\n\nexport interface NotifyOnToken extends BaseFrameNotification {\n  command: 'NotifyOnToken';\n  data: {\n    token: Array<string>;\n  };\n}\n\nexport interface NotifyOnFullyLoaded extends BaseFrameNotification {\n  command: 'NotifyOnFullyLoaded';\n  data: Record<string | number, never>;\n}\n\nexport interface NotifyOnValidate extends BaseFrameNotification {\n  command: 'NotifyOnValidate';\n  data: { isValid: boolean };\n}\n\nexport interface NotifyOnSubmit extends BaseFrameNotification {\n  command: 'NotifyOnSubmit';\n  data: Record<string | number, never>;\n}\n\nexport interface NotifyOnError extends BaseFrameNotification {\n  command: 'NotifyOnError';\n  data: LunaSecErrorProperties;\n}\n\nexport type FrameNotification =\n  | NotifyOnBlur\n  | NotifyOnStart\n  | NotifyOnToken\n  | NotifyOnFullyLoaded\n  | NotifyOnSubmit\n  | NotifyOnValidate\n  | NotifyOnError;\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport function safeParseJson<T>(json: string) {\n  try {\n    return JSON.parse(json) as T;\n  } catch (e) {\n    return null;\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n/**\n * Surprisingly, <style> element can be appended to <input> and <textarea>\n * so we can support ::placeholder, and ::selection even for them.\n */\nimport { SupportedElementTagName } from './types';\n\nexport const SUPPORTED_PSEUDO_SELECTORS = [\n  '::after',\n  '::before',\n  '::first-letter',\n  '::first-line',\n  '::marker',\n  '::placeholder',\n  '::selection',\n];\n\nexport const REPLACED_ELEMENTS: SupportedElementTagName[] = [\n  'iframe',\n  'video',\n  'embed',\n  'img',\n  'audio',\n  'option',\n  'canvas',\n  'object',\n  // 'applet', TODO: No idea why this broke, I think they took it out of the typings for the DOM\n];\n\nexport const VOID_ELEMENTS: SupportedElementTagName[] = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n];\n\nexport const PARENT_ELEMENT_STYLE_ATTRIBUTES = [\n  'align-self',\n  'block-size',\n  'bottom',\n  'flex',\n  'flex-grow',\n  'flex-shrink',\n  'height',\n  'left',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'margin',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'min-height',\n  'min-width',\n  // Note: Disabling passing position style data because it breaks elements with a default height of 0.\n  'position',\n  'right',\n  'top',\n  'vertical-align',\n  'width',\n];\n\nexport const ELEMENT_ATTRIBUTE_WHITELIST = [\n  'align-content',\n  'align-items',\n  'appearance',\n  'backface-visibility',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-position-x',\n  'background-position-y',\n  'background-repeat',\n  'background-size',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-end-end-radius',\n  'border-end-start-radius',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-start-end-radius',\n  'border-start-start-radius',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-adjust',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'contain',\n  'content',\n  'counter-increment',\n  'counter-reset',\n  'counter-set',\n  'cursor',\n  'direction',\n  'dominant-baseline',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-optical-sizing',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-alternates',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'hyphens',\n  'image-orientation',\n  'image-rendering',\n  'ime-mode',\n  'inline-size',\n  'inset-block-end',\n  'inset-block-start',\n  'inset-inline-end',\n  'inset-inline-start',\n  'letter-spacing',\n  'lighting-color',\n  'line-break',\n  'line-height',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'mask',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-position-x',\n  'mask-position-y',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'mix-blend-mode',\n  'object-fit',\n  'object-position',\n  'offset-anchor',\n  'offset-distance',\n  'offset-path',\n  'offset-rotate',\n  'order',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-anchor',\n  'overflow-block',\n  'overflow-inline',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'overscroll-behavior-block',\n  'overscroll-behavior-inline',\n  'overscroll-behavior-x',\n  'overscroll-behavior-y',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'quotes',\n  'r',\n  'resize',\n  'rotate',\n  'row-gap',\n  'ruby-align',\n  'ruby-position',\n  'scale',\n  'scroll-behavior',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'stroke',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-align',\n  'text-align-last',\n  'text-anchor',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-skip-ink',\n  'text-decoration-style',\n  'text-decoration-thickness',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-offset',\n  'text-underline-position',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'user-select',\n  'vector-effect',\n  'white-space',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'writing-mode',\n];\n\nexport const NO_GENERATE_CONTENT_ELEMENTS = REPLACED_ELEMENTS.concat(VOID_ELEMENTS);\n\nexport const PLACEHOLDER_ELEMENTS: SupportedElementTagName[] = ['input', 'textarea', 'span'];\n\nexport const SKIPPED_PROPERTIES = ['-webkit-locale', '--tridactyl'];\n\nexport const INLINE_SKIPPED_PROPERTIES = null;\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport * as http from 'http';\nimport * as https from 'https';\n\n// Apparently this is automatically imported in both Node and the Browser.\n// It's kind of janky to _not_ explicitly import this, but this is the best \"isomorphic\" way.\n// If we do import it, then the Browser webpack build step complains.\n// If we do this, then both Node.js and the browser seem to work. *shrug*\nexport function getUrl() {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return URL;\n}\n\nfunction getRequestModule(protocol: string) {\n  if (protocol === 'http:') {\n    return http;\n  }\n\n  if (protocol === 'https:') {\n    return https;\n  }\n\n  throw new Error('Unable to identify request method for Refinery API Client');\n}\n\nexport class FailedJsonDeserializationError extends Error {\n  readonly rawData?: string;\n\n  constructor(rawData?: string) {\n    super('Failed to deserialize JSON data');\n    this.rawData = rawData;\n  }\n}\n\nexport class BadHttpResponseError extends Error {\n  readonly code?: number;\n  readonly rawData!: string;\n\n  constructor(responseCode: number | undefined, rawData: string) {\n    super('Bad Http response received');\n    this.name = 'httpError';\n    this.code = responseCode;\n    this.rawData = rawData;\n  }\n}\n\nfunction getRequestParams(host: string, path: string, params: http.ClientRequestArgs) {\n  const URL = getUrl();\n\n  const requestUri = new URL(path, host);\n\n  const requestModule = getRequestModule(requestUri.protocol);\n\n  const searchParams = requestUri.search !== undefined ? `?${requestUri.search}` : '';\n\n  const requestConfig: http.ClientRequestArgs = {\n    protocol: requestUri.protocol,\n    hostname: requestUri.hostname,\n    port: requestUri.port,\n    path: requestUri.pathname + searchParams,\n    ...params,\n  };\n\n  return { requestModule, requestConfig };\n}\n\n// DEPRECATED.  For the love of all that is sane, just use axios\nexport function makeRawRequest(\n  host: string,\n  path: string,\n  params: http.ClientRequestArgs,\n  body?: string | Buffer\n): Promise<readonly [http.IncomingMessage, Buffer]> {\n  const { requestModule, requestConfig } = getRequestParams(host, path, params);\n  return new Promise((resolve, reject) => {\n    let responseBuffer: Buffer;\n    const req = requestModule.request(requestConfig, (res) => {\n      res.on('data', (chunk: Buffer) => {\n        chunk.copy(responseBuffer);\n      });\n      res.on('end', () => {\n        resolve([res, responseBuffer]);\n      });\n    });\n\n    req.on('error', (e) => reject(e));\n    req.on('response', (resp) => {\n      const contentLength = resp.headers['content-length'];\n\n      if (!contentLength) {\n        responseBuffer = Buffer.alloc(0);\n        return;\n      }\n\n      const size = parseInt(contentLength);\n\n      if (size < 0) {\n        return reject('Content length is negative');\n      }\n\n      responseBuffer = Buffer.alloc(size);\n    });\n\n    if (body !== undefined) {\n      req.write(body);\n    }\n\n    req.end();\n  });\n}\n\n// DEPRECATED.  For the love of all that is sane, just use axios\nexport async function makeRequest<T>(\n  host: string,\n  path: string,\n  params: http.ClientRequestArgs,\n  body?: string\n): Promise<T> {\n  const [res, responseBuffer] = await makeRawRequest(host, path, params, body);\n\n  const responseData = responseBuffer.toString();\n\n  if (res.statusCode !== 200) {\n    console.error('Bad HTTP Response', { host, path, params, res, responseData });\n    throw new BadHttpResponseError(res.statusCode, responseData);\n  }\n\n  try {\n    // TODO: Validate this parsed JSON against some schema\n    return JSON.parse(responseData) as T;\n  } catch (e) {\n    // If data can't be parsed, wrap the data.\n    const error = new FailedJsonDeserializationError(responseData);\n    console.error(error);\n    throw error;\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport * from './frame-message-creator';\nexport * from './listener';\nexport * from './types';\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { timeout } from '../utils/async';\nimport { generateSecureNonce } from '../utils/random';\n\nimport {\n  FrameMessage,\n  FrameNotification,\n  InboundFrameMessageMap,\n  OutboundFrameMessageMap,\n  OutboundToInboundMessageTypeMap,\n  OutboundToInboundMessageValueMap,\n  UnknownFrameMessage,\n} from './types';\n\nexport class FrameMessageCreator {\n  private readonly frameResponses: Record<string, UnknownFrameMessage>;\n  private readonly timeout: number;\n  private readonly frameNotificationCallback!: (_notification: FrameNotification) => void;\n  private readonly frameNonceFilter: string;\n  private readonly lunaSecDomain: string;\n\n  constructor(\n    lunaSecDomain: string,\n    frameNonceFilter: string,\n    notificationCallback: (notification: FrameNotification) => void,\n    timeout = 30000\n  ) {\n    this.lunaSecDomain = lunaSecDomain;\n    this.frameNonceFilter = frameNonceFilter;\n    this.frameResponses = {};\n    this.frameNotificationCallback = notificationCallback;\n    this.timeout = timeout;\n  }\n\n  createMessageToFrame<K extends keyof OutboundFrameMessageMap>(\n    command: K,\n    data: OutboundFrameMessageMap[K]\n  ): FrameMessage<OutboundFrameMessageMap, K> {\n    return {\n      command,\n      correlationToken: generateSecureNonce(),\n      data: data,\n    };\n  }\n\n  postReceived(unknownPost: UnknownFrameMessage | FrameNotification): void {\n    if (!unknownPost.frameNonce && !unknownPost.correlationToken) {\n      throw new Error(\n        'Unknown post message received without correlationToken or frameNonce, must have one or the other'\n      );\n    }\n\n    // Notifications have a frameNonce.  Notifications are one way messages from the frame to the outside\n    if (unknownPost.frameNonce) {\n      this.handleNotificationReceived(unknownPost);\n      return;\n    }\n    // Messages are receipt confirmations to things we have sent the frame, and have a correlationToken\n    if (unknownPost.correlationToken) {\n      this.handleMessageReceived(unknownPost);\n      return;\n    }\n  }\n\n  // Notifications start in the frame and are sent here to notify us of events\n  handleNotificationReceived(notification: FrameNotification): void {\n    if (notification.frameNonce !== this.frameNonceFilter) {\n      return;\n    }\n    const notificationTypes: FrameNotification['command'][] = [\n      'NotifyOnBlur',\n      'NotifyOnStart',\n      'NotifyOnToken',\n      'NotifyOnFullyLoaded',\n      'NotifyOnValidate',\n      'NotifyOnSubmit',\n      'NotifyOnError',\n    ];\n    if (!notificationTypes.includes(notification.command)) {\n      throw new Error(`Received Frame Notification of unknown type, allowed types are ${notificationTypes.toString()}`);\n    }\n    this.frameNotificationCallback(notification);\n    return;\n  }\n\n  // Messages are responses from the frame to things we have sent it\n  handleMessageReceived(message: UnknownFrameMessage): void {\n    // TODO: Validate response has valid JSON\n    this.frameResponses[message.correlationToken] = message;\n  }\n\n  async sendMessageToFrameWithReply<K extends keyof OutboundFrameMessageMap | keyof OutboundToInboundMessageTypeMap>(\n    frameContext: Window,\n    message: FrameMessage<OutboundFrameMessageMap, K>\n  ): Promise<FrameMessage<InboundFrameMessageMap, OutboundToInboundMessageTypeMap[K]> | null> {\n    const startTime = new Date();\n\n    // TODO: Make this domain be configurable\n    frameContext.postMessage(JSON.stringify(message), this.lunaSecDomain);\n    await timeout(2);\n\n    // Spin lock that waits until we receive a response in another \"thread\".\n    // This will return false when a message is in the response buffer \"frameResponses\".\n    while (this.frameResponses[message.correlationToken] === undefined) {\n      const currentTime = new Date();\n\n      // Throw a timeout if we don't get a response.\n      if (currentTime.getTime() - startTime.getTime() > this.timeout) {\n        throw new Error('Timeout exceeded for frame call: ' + message.correlationToken);\n      }\n\n      // Delay loop asynchronously\n      await timeout(5);\n    }\n\n    const rawResponse = this.frameResponses[message.correlationToken];\n\n    delete this.frameResponses[message.correlationToken];\n\n    if (rawResponse.command !== OutboundToInboundMessageValueMap[message.command]) {\n      console.error('Wrong response message type from secure frame', rawResponse);\n      return null;\n    }\n\n    // TODO: Add JSON validation to prevent badly formatted messaged from slipping through.\n    // Or use Protobuf..?\n    return rawResponse as FrameMessage<InboundFrameMessageMap, OutboundToInboundMessageTypeMap[K]>;\n  }\n\n  convertRawMessageToTypedMessage<K extends keyof InboundFrameMessageMap>(\n    rawMessage: UnknownFrameMessage\n  ): FrameMessage<InboundFrameMessageMap, K> {\n    return rawMessage as FrameMessage<InboundFrameMessageMap, K>;\n  }\n\n  processFrameResponse(\n    message: UnknownFrameMessage\n  ): FrameMessage<InboundFrameMessageMap, keyof InboundFrameMessageMap> | null {\n    // TODO: Add validation for this RPC here.\n    switch (message.command) {\n      case 'ReceiveCommittedToken':\n        return this.convertRawMessageToTypedMessage<'ReceiveCommittedToken'>(message);\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n// import {patchStyle} from '../style-patcher/write';\nimport { safeParseJson } from '../utils/json';\n\nimport { UnknownFrameMessage } from './types';\n\nexport function addJsEventListener(\n  window: Window,\n  lunaSecDomain: string,\n  callback: (message: UnknownFrameMessage) => void\n): void {\n  window.addEventListener('message', (event) => {\n    if (event.origin !== lunaSecDomain) {\n      return;\n    }\n\n    const frameMessage = safeParseJson<UnknownFrameMessage>(event.data);\n\n    // Invalid data passed from frame.\n    if (frameMessage === null) {\n      console.error('Frame message null:', frameMessage);\n      return;\n    }\n\n    callback(frameMessage);\n  });\n}\n\nexport function addReactEventListener(\n  lunaSecDomain: string,\n  window: Window,\n  controller: AbortController,\n  callback: (message: UnknownFrameMessage) => void\n): AbortSignal {\n  const abortSignal = controller.signal;\n\n  // Note: The AbortSignal seems to be unknown to Typescript.\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const eventListenerOptions: AddEventListenerOptions = { signal: abortSignal };\n\n  window.addEventListener(\n    'message',\n    (event) => {\n      const parsedLunaSecDomain = new URL(lunaSecDomain);\n\n      if (event.origin !== parsedLunaSecDomain.origin) {\n        return;\n      }\n\n      const frameMessage = safeParseJson<UnknownFrameMessage>(event.data);\n\n      // Invalid data passed from frame.\n      if (frameMessage === null) {\n        console.error('Frame message null:', frameMessage);\n        return;\n      }\n\n      // Message is not for us\n      // if (frameMessage.correlationToken !== token) {\n      //   console.log('correlation token mismatch:', frameMessage.correlationToken, token);\n      //   return;\n      // }\n\n      callback(frameMessage);\n    },\n    eventListenerOptions\n  );\n\n  return abortSignal;\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport * from './constants';\nexport * from './dom-utils';\nexport * from './types';\nexport * from './read';\nexport * from './write';\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { getChildStyle, getParentStyle, getStyleSnapshot } from './dom-utils';\nimport { PesudoStyleInfoMap, ReadElementStyle, SupportedElement } from './types';\n// import {\n//   NO_GENERATE_CONTENT_ELEMENTS,\n//   PLACEHOLDER_ELEMENTS,\n//   // SUPPORTED_PSEUDO_SELECTORS\n// } from './constants';\n\nexport function getStyleInfo(source: SupportedElement, pseudoSelector?: string): ReadElementStyle | null {\n  const computed = window.getComputedStyle(source, pseudoSelector);\n  const allStyleInfo = getStyleSnapshot(computed);\n  const framedInputStyle = getChildStyle(allStyleInfo);\n  const parentStyle = getParentStyle(allStyleInfo);\n  const { display, content } = framedInputStyle;\n\n  if (display === 'none' || (pseudoSelector && content === 'none')) {\n    console.debug(\"Can't generate style from hidden element \", source);\n    return null;\n  }\n\n  if (!pseudoSelector) {\n    const { width } = source.getBoundingClientRect();\n    const height = getTotalHeight(source);\n    const allPseudoStyleInfo: PesudoStyleInfoMap = Object.create(null);\n\n    // TODO: Figure out implementing pseudo selectors for cloned element\n    // for (const selector of SUPPORTED_PSEUDO_SELECTORS) {\n    //   const pseudoStyleInfo = getStyleInfo(source, selector);\n    //\n    //   if (pseudoStyleInfo) {\n    //     allPseudoStyleInfo[selector] = pseudoStyleInfo;\n    //   }\n    // }\n\n    return {\n      parentStyle: parentStyle,\n      width: `${width}px`,\n      height: `${height}px`,\n      childStyle: {\n        style: framedInputStyle,\n        pseudo: allPseudoStyleInfo,\n      },\n    };\n  }\n\n  throw new Error('Pseudo selector support is broken. Fix it if you want it');\n\n  // pseudo elements\n  // if (\n  //   content === \"none\" ||\n  //   (pseudoSelector === \"::marker\" && display !== \"list-item\") ||\n  //   ((pseudoSelector === \"::before\" || pseudoSelector === \"::after\") &&\n  //     isTagName(source as SupportedElement, NO_GENERATE_CONTENT_ELEMENTS)) ||\n  //   (pseudoSelector === \"::placeholder\" &&\n  //     !isTagName(source as SupportedElement, PLACEHOLDER_ELEMENTS))\n  // ) {\n  //   return null;\n  // }\n  //\n  // return {\n  //   style,\n  // };\n}\n\nfunction getTotalHeight(el: SupportedElement) {\n  const { height } = el.getBoundingClientRect();\n  // const computedStyle = window.getComputedStyle(el);\n  // const marginHeight = parseInt(computedStyle.marginTop) + parseInt(computedStyle.marginBottom);\n  // Note: Disabling because this seems to be unnecessary now.\n  return height; // + marginHeight;\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { generateCssText } from './dom-utils';\nimport { StyleInfo, SupportedElement } from './types';\n\n// TODO: Figure out if this is a security concern before re-enabling\nexport function patchStyle(target: SupportedElement, styleInfo: StyleInfo): void {\n  if (!styleInfo) {\n    return;\n  }\n\n  const { style } = styleInfo;\n  // also possible to concat target.style.cssText onto this, but for now we don't have any, so forget it\n  target.style.cssText = generateCssText(style);\n\n  /**\n   * Patch size\n   *\n   * TODO: how to deal with inline elements?\n   *\n   */\n  // This is brittle but checking for display: inline was not working.\n  // Remember to add any inline elements we need here\n  // Another option is to use HTML5 content categories \"phrasing content\" but worried about browser support\n  if (target.nodeName !== 'SPAN') {\n    target.style.boxSizing = 'border-box';\n    target.style.width = '100%';\n    target.style.height = '100%';\n    target.style.maxWidth = 'none';\n    target.style.minWidth = 'auto';\n  }\n\n  // TODO: Pseudo element support is disabled.\n  // const pseudoCssTextList = [];\n  //\n  //\n  // for (const selector in pseudo) {\n  //\n  //   const pseudoStyleInfo = pseudo[selector];\n  //   const pseudoDefaultStyleInfo = pseudoDefault[selector];\n  //\n  //   if (!pseudoDefaultStyleInfo) {\n  //     continue;\n  //   }\n  //\n  //   const pseudoStyle = pseudoStyleInfo && pseudoStyleInfo.style;\n  //   const pseudoDefaultStyle = pseudoDefaultStyleInfo && pseudoDefaultStyleInfo.style;\n  //   const cssText = generateCssText(\n  //     getStyleDiff(pseudoStyle, pseudoDefaultStyle)\n  //   );\n  //\n  //   const css = generatePseudoElementCSS(target, selector, cssText);\n  //\n  //   if (css) {\n  //     pseudoCssTextList.push(css);\n  //   }\n  // }\n  //\n  // if (pseudoCssTextList.length) {\n  //   const style = createStyleElement(doc, pseudoCssTextList.join(\"\\n\"));\n  //\n  //   target.appendChild(style);\n  // }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport * from './async';\nexport * from './element-event-triggers';\nexport * from './json';\nexport * from './random';\nexport * from './to-camel-case';\nexport * from '../auth/authentication';\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n/**\n * Creates events in a cross-browser compatible way.\n * @param eventType String of the event type to pass.\n * @param bubbles True of false if the event should bubble up.\n */\nfunction createEvent(eventType: string, bubbles: boolean) {\n  if ('createEvent' in document) {\n    const event = document.createEvent('Event');\n    event.initEvent(eventType, bubbles, true);\n    return event;\n  }\n\n  if ('Event' in window) {\n    return new Event(eventType, { bubbles: bubbles, cancelable: true });\n  }\n\n  throw new Error('Unable to create a new event: Unknown environment');\n}\n\n/**\n * Forces an element to gain \"focus\" in the browser.\n * Note: Element must be visible to gain focus.\n * @param element Element to snap focus to.\n */\nexport function triggerFocus(element: HTMLInputElement | Element) {\n  const eventType = 'onfocusin' in element ? 'focusin' : 'focus';\n  const bubbles = 'onfocusin' in element;\n\n  'focus' in element && element.focus();\n  element.dispatchEvent(createEvent(eventType, bubbles));\n}\n\n/**\n * Forces an element to lose \"focus\" in the browser.\n * Note: Element must be visible for this to succeed.\n * Note: If an element doesn't have focus prior to calling this function, blur may not trigger.\n * @param element Element to remove focus from.\n */\nexport function triggerBlur(element: HTMLElement) {\n  element.blur();\n  element.dispatchEvent(createEvent('blur', true));\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n// Fork of: https://github.com/sindresorhus/camelcase/blob/main/index.js\n\nexport interface CamelCaseOptions {\n  pascalCase: boolean;\n  preserveConsecutiveUppercase: boolean;\n  locale?: string;\n}\n\nexport function preserveCamelCase(str: string, locale?: string) {\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n\n  for (let i = 0; i < str.length; i++) {\n    const character = str[i];\n\n    if (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n      str = str.slice(0, i) + '-' + str.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n      str = str.slice(0, i - 1) + '-' + str.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower =\n        character.toLocaleLowerCase(locale) === character && character.toLocaleUpperCase(locale) !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper =\n        character.toLocaleUpperCase(locale) === character && character.toLocaleLowerCase(locale) !== character;\n    }\n  }\n\n  return str;\n}\n\nexport function preserveConsecutiveUppercase(input: string) {\n  return input.replace(/^[\\p{Lu}](?![\\p{Lu}])/gu, (m1) => m1.toLowerCase());\n}\n\nexport function postProcess(input: string, options: CamelCaseOptions) {\n  /* eslint-disable @typescript-eslint/no-unsafe-return */\n  return input\n    .replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase(options.locale))\n    .replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, (m) => m.toLocaleUpperCase(options.locale));\n  /* eslint-enable @typescript-eslint/no-unsafe-return */\n}\n\nexport function toCamelCase(input: string, options?: CamelCaseOptions) {\n  if (!options) {\n    options = {\n      pascalCase: false,\n      preserveConsecutiveUppercase: false,\n    };\n  }\n\n  if (Array.isArray(input)) {\n    input = input\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      .map((x) => x.trim())\n      .filter((x) => x.length)\n      .join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toLocaleUpperCase(options.locale) : input.toLocaleLowerCase(options.locale);\n  }\n\n  const hasUpperCase = input !== input.toLocaleLowerCase(options.locale);\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input, options.locale);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '');\n\n  if (options.preserveConsecutiveUppercase) {\n    input = preserveConsecutiveUppercase(input);\n  } else {\n    input = input.toLocaleLowerCase();\n  }\n\n  if (options.pascalCase) {\n    input = input.charAt(0).toLocaleUpperCase(options.locale) + input.slice(1);\n  }\n\n  return postProcess(input, options);\n}\n\nexport function camelCaseObject<T>(obj: Record<string, T>) {\n  return Object.keys(obj).reduce((camelCaseObj, key) => {\n    camelCaseObj[toCamelCase(key)] = obj[key];\n    return camelCaseObj;\n  }, {} as Record<string, T>);\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { LunaSecError } from '@lunasec/isomorphic-common';\n\nimport { SecureFrameAuthClient } from './auth-client';\n// This could probably be a local variable but just worried about any potential duplication between a custom app and our libraries makes the singletons a little sketchier\n\n// TODO: support configurable refresh inverval\n// const refreshTimeInMinutes = process.env.LUNASEC_VERIFY_SESSION_INTERVAL\n//const refreshInterval = 5 * 60000; // 5 mins\nconst refreshInterval = 1 * 60000; // 5 mins\n\nlet lastAuthenticatedTime: number | null = null;\nlet authFlowInProgress: Promise<boolean> | null = null;\n\ndeclare global {\n  interface Window {\n    __DEBUG_LUNASEC_AUTH__: boolean | undefined;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst log = window.__DEBUG_LUNASEC_AUTH__ === true ? console.log : () => {};\n\n// If you can figure out a simpler way to do this, please write it. This function:\n// 1 ) Starts the auth flow by calling authenticate session\n// 2 ) Starts a timer that will do the auth flow again on an interval\n// 3 ) Returns a promise, which when the first auth flow is complete, resolves to a function that can be called to clear whatever the last timer was.  This is our \"abort\"\nexport class LunaSecAuthentication {\n  private readonly authClient: SecureFrameAuthClient;\n  private readonly errorHandler: (_e: Error) => void;\n  private readonly sessionAuthProvider?: string;\n\n  constructor(authDomain: string, errorHandler: (e: Error) => void, sessionAuthProvider?: string) {\n    this.authClient = new SecureFrameAuthClient(authDomain);\n    if (!errorHandler) {\n      throw new LunaSecError({\n        code: '500',\n        name: 'errorHandlerUnset',\n        message: 'Must set error handler for LunaSec auth',\n      });\n    }\n    this.errorHandler = errorHandler;\n    this.sessionAuthProvider = sessionAuthProvider;\n  }\n\n  async startSessionManagement(): Promise<() => void> {\n    log('session management called');\n    await this.authenticateSession();\n\n    const timer = setInterval(() => {\n      log('timer called authenticate session for a second run');\n      this.authenticateSession().catch((e) => {\n        throw e;\n      });\n    }, refreshInterval);\n\n    return function destroyTimer() {\n      clearInterval(timer);\n    };\n  }\n\n  // TODO (forrest) move this authentication logic into the LunaSecConfigContext provider and get rid of a lot of this logic\n  async authenticateSession(): Promise<Promise<boolean> | void> {\n    // Stop every component from making a request on first page load\n    if (authFlowInProgress) {\n      if (lastAuthenticatedTime) {\n        // If a request is in flight but we already had an older session, just resolve immediately\n        log('previous request in flight but old session exists, returning instantly');\n        return;\n      } else {\n        // or if this is the first time and we dont have an older session, block until the session gets set\n        log('previous request in flight and no old session, returning request promise');\n        return authFlowInProgress;\n      }\n    }\n    log('authenticate session not skipping');\n\n    if (!lastAuthenticatedTime || lastAuthenticatedTime < Date.now() - refreshInterval) {\n      log('need to fetch new session');\n      authFlowInProgress = this.validateOrCreateSession();\n      const authSuccess = await authFlowInProgress;\n      if (authSuccess) {\n        lastAuthenticatedTime = Date.now();\n      }\n      authFlowInProgress = null;\n    } else {\n      log('authenticated recently enough to skip the auth flow');\n    }\n  }\n\n  /**\n    Ensure session will first call into the secure frame to create an auth flow state session\n    it will then redirect to the auth provider to verify the user's identity\n    the auth provider will then redirect back to the secure frame's '/session/create' endpoint\n    this will finalize the authentication request and set an 'access_token' cookie on the secure frame origin\n\n    Because we are redirecting cross origin, ensure session will not have a response as it is set to execute\n    with 'no-cors' set. It is possible to experience an error in this request flow.\n   */\n  async validateOrCreateSession(): Promise<boolean> {\n    log('ensuring the secure frame has a valid session');\n\n    // We can get NO information back from this call because of CORS, so we have to call again afterwards\n    await this.authClient.ensureSession(this.sessionAuthProvider);\n\n    log('verifying the created session is valid');\n    const verifyResponse = await this.authClient.verifySession();\n    if (!verifyResponse.success) {\n      this.errorHandler(verifyResponse.error);\n      return false;\n    }\n\n    return true;\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { LunaSecError } from '@lunasec/isomorphic-common';\n\ninterface SuccessResponse {\n  success: true;\n}\ninterface FailureResponse {\n  success: false;\n  error: LunaSecError;\n}\ntype SessionResponse = SuccessResponse | FailureResponse;\n\nexport class SecureFrameAuthClient {\n  private readonly url: string;\n  constructor(url: string) {\n    this.url = url;\n  }\n\n  private getURL(path: string): string {\n    const url = new URL(path, this.url);\n    return url.toString();\n  }\n\n  private async processResponse(resp: Response): Promise<SessionResponse> {\n    const json = await resp.json();\n    // Handle the case where there were network errors or something went truly wrong\n    if (json === null || resp.status !== 200) {\n      return {\n        success: false,\n        error: new LunaSecError({\n          name: 'authError',\n          message: `Connected to LunaSec Auth endpoint failed`,\n          code: resp.status.toString(),\n        }),\n      };\n    }\n    if (json.error) {\n      return {\n        success: json.success,\n        error: new LunaSecError({ code: '400', name: 'authError', message: json.error }),\n      };\n    }\n    // TODO: Add JSON schema validation\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return json;\n  }\n\n  // dispatch to the secure frame session verifier to check if the secure frame session exists\n  public async verifySession() {\n    const resp = await fetch(this.getURL('session/verify'), {\n      credentials: 'include',\n      mode: 'cors',\n    });\n    return await this.processResponse(resp);\n  }\n\n  // dispatch to the secure frame to ensure that a session exists\n  public async ensureSession(authProvider?: string) {\n    const authProviderOption = authProvider ? `?auth_provider=${authProvider}` : '';\n    return fetch(this.getURL('session/ensure' + authProviderOption), {\n      credentials: 'include',\n      mode: 'no-cors',\n      redirect: 'follow',\n    });\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport * from './lunasec-error';\nexport * from './scrub-properties';\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { camelCaseObject } from '@lunasec/browser-common';\nimport React, { Component, CSSProperties } from 'react';\n\nimport { RenderData, WrappedComponentProps } from '../../types/internal-types';\ntype AnchorRenderData = RenderData<'Downloader'>;\nexport type AnchorProps = WrappedComponentProps<'Downloader'>;\n\nexport default class Downloader extends Component<AnchorProps> {\n  constructor(props: AnchorProps) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.renderData.mountedCallback();\n  }\n\n  renderFrame(renderData: AnchorRenderData) {\n    if (!renderData.frameStyleInfo) {\n      return null;\n    }\n    const { parentStyle, width, ...frameStyle } = renderData.frameStyleInfo;\n\n    const iframeStyle: CSSProperties = {\n      ...camelCaseObject(parentStyle),\n      display: 'block',\n      width: width,\n    };\n\n    console.log({ frameStyle });\n\n    return (\n      <iframe\n        ref={renderData.frameRef}\n        src={renderData.frameUrl}\n        style={iframeStyle}\n        className={renderData.frameClass}\n        frameBorder={0}\n        key={renderData.frameUrl}\n      />\n    );\n  }\n\n  render() {\n    const { renderData, className, children, ...otherProps } = this.props;\n\n    // TODO: handle this in the wrapped component by using the styled component callback\n\n    return (\n      <div className={`${renderData.containerClass}`} style={renderData.parentContainerStyle}>\n        <a\n          {...otherProps}\n          ref={renderData.dummyRef}\n          style={renderData.dummyElementStyle}\n          tabIndex={-1}\n          className={className || ''}\n        >\n          &ensp;\n        </a>\n        {this.renderFrame(renderData)}\n        {children}\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { camelCaseObject } from '@lunasec/browser-common';\nimport React, { Component, CSSProperties } from 'react';\n\nimport { RenderData, WrappedComponentProps } from '../../types/internal-types';\n\ntype InputRenderData = RenderData<'Input'>;\nexport type InputProps = WrappedComponentProps<'Input'>;\n\nexport default class Input extends Component<InputProps> {\n  constructor(props: InputProps) {\n    super(props);\n    console.log('props passed to input are ', props);\n  }\n\n  componentDidMount() {\n    this.props.renderData.mountedCallback();\n  }\n\n  renderFrame(renderData: InputRenderData) {\n    if (!renderData.frameStyleInfo) {\n      return null;\n    }\n\n    const { parentStyle, width, height } = renderData.frameStyleInfo;\n    const iframeStyle: CSSProperties = {\n      ...camelCaseObject(parentStyle),\n      display: 'block',\n      width: width,\n      height: height,\n    };\n\n    return (\n      <iframe\n        ref={renderData.frameRef}\n        src={renderData.frameUrl}\n        className={renderData.frameClass}\n        style={iframeStyle}\n        frameBorder={0}\n        key={renderData.frameUrl}\n      />\n    );\n  }\n\n  render() {\n    // Pull the renderData out so we don't put weird stuff into our dummy element\n    const { renderData, children, className, name, ...otherProps } = this.props;\n\n    // TODO: inputRef is leaking into here somehow but not sure where it is being set so ts-ignore to remove it\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { inputRef, ...scrubbedProps } = otherProps;\n\n    return (\n      <div style={{ ...renderData.parentContainerStyle, flexGrow: 1 }} className={`${renderData.containerClass}`}>\n        <input\n          {...scrubbedProps}\n          ref={renderData.dummyInputStyleRef}\n          style={{ ...renderData.dummyElementStyle, ...this.props.style }}\n          tabIndex={-1}\n          className={`${renderData.hiddenElementClass} ${className || ''}`}\n        />\n        <input\n          {...scrubbedProps}\n          name={name} // only the element we want to submit has a name, otherwise validations run\n          type=\"text\"\n          ref={renderData.dummyRef}\n          style={{ ...renderData.dummyElementStyle, ...this.props.style, position: 'absolute' }}\n          tabIndex={-1}\n          className={`${renderData.hiddenElementClass} ${className || ''}`}\n        />\n        {this.renderFrame(renderData)}\n        {children}\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { camelCaseObject } from '@lunasec/browser-common';\nimport React, { Component, CSSProperties } from 'react';\n\nimport { RenderData, WrappedComponentProps } from '../../types/internal-types';\ntype ParagraphRenderData = RenderData<'Paragraph'>;\nexport type ParagraphProps = WrappedComponentProps<'Paragraph'>;\n\nexport default class Paragraph extends Component<ParagraphProps> {\n  constructor(props: ParagraphProps) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.renderData.mountedCallback();\n  }\n\n  renderFrame(renderData: ParagraphRenderData) {\n    if (!renderData.frameStyleInfo) {\n      return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { parentStyle, width, height, ...frameStyle } = renderData.frameStyleInfo;\n\n    const iframeStyle: CSSProperties = {\n      ...camelCaseObject(parentStyle),\n      display: 'block',\n      width: width,\n      height: height,\n      margin: 0,\n      marginBlock: 0,\n    };\n\n    return (\n      <iframe\n        ref={renderData.frameRef}\n        src={renderData.frameUrl}\n        className={renderData.frameClass}\n        style={iframeStyle}\n        frameBorder={0}\n        key={renderData.frameUrl}\n      />\n    );\n  }\n\n  render() {\n    // Pull the renderData out so we don't put weird stuff into our dummy element\n    const { renderData, className, children, ...otherProps } = this.props;\n\n    return (\n      <div style={renderData.parentContainerStyle} className={`${renderData.containerClass}`}>\n        <p\n          {...otherProps}\n          ref={renderData.dummyRef}\n          style={{ ...renderData.dummyElementStyle }}\n          tabIndex={-1}\n          className={className || ''}\n        >\n          &ensp;\n        </p>\n        {this.renderFrame(renderData)}\n        {children}\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { camelCaseObject } from '@lunasec/browser-common';\nimport classnames from 'classnames';\nimport React, { Component, CSSProperties } from 'react';\n\nimport { RenderData, WrappedComponentProps } from '../../types/internal-types';\ntype TextAreaRenderData = RenderData<'TextArea'>;\nexport type TextAreaProps = WrappedComponentProps<'TextArea'>;\n\nexport default class TextArea extends Component<TextAreaProps> {\n  constructor(props: TextAreaProps) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.renderData.mountedCallback();\n  }\n\n  renderFrame(renderData: TextAreaRenderData) {\n    if (!renderData.frameStyleInfo) {\n      return null;\n    }\n    const { parentStyle, width, height } = renderData.frameStyleInfo;\n\n    const iframeStyle: CSSProperties = {\n      ...camelCaseObject(parentStyle),\n      display: 'block',\n      width: width,\n      height: height,\n    };\n\n    return (\n      <iframe\n        ref={renderData.frameRef}\n        src={renderData.frameUrl}\n        className={renderData.frameClass}\n        style={iframeStyle}\n        frameBorder={0}\n        key={renderData.frameUrl}\n      />\n    );\n  }\n\n  render() {\n    // Pull the renderData out so we don't weird stuff into our dummy element\n    const { renderData, className, children, ...otherProps } = this.props;\n\n    const validatedName = this.props.name !== undefined ? this.props.name : '';\n\n    const containerName = `secure-textarea-container-${renderData.frameId} secure-textarea-container-${validatedName}`;\n\n    const textareaClass = classnames({\n      // Combine with the classname passed in props because styled-components passes some random classnames to attach our css\n      [className || '']: true,\n    });\n\n    return (\n      // TODO: height of this container is not working properly, fix\n      <div style={renderData.parentContainerStyle} className={containerName}>\n        <textarea\n          {...otherProps}\n          ref={renderData.dummyRef}\n          style={{ ...renderData.dummyElementStyle, width: '100%' }}\n          tabIndex={-1}\n          className={textareaClass}\n        />\n        {this.renderFrame(renderData)}\n        {children}\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { camelCaseObject } from '@lunasec/browser-common';\nimport React, { Component, CSSProperties } from 'react';\n\nimport { RenderData, WrappedComponentProps } from '../../types/internal-types';\ntype UploaderRenderData = RenderData<'Uploader'>;\nexport type UploaderProps = WrappedComponentProps<'Uploader'>; // change these props to be some whitelisted filepond props\n\nexport default class Uploader extends Component<UploaderProps> {\n  constructor(props: UploaderProps) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.renderData.mountedCallback();\n  }\n\n  renderFrame(renderData: UploaderRenderData) {\n    if (!renderData.frameStyleInfo) {\n      return null;\n    }\n    const { parentStyle } = renderData.frameStyleInfo;\n\n    const iframeStyle: CSSProperties = {\n      ...camelCaseObject(parentStyle),\n      width: '300px',\n      height: '300px',\n      display: 'block',\n    };\n\n    return (\n      <iframe\n        ref={renderData.frameRef}\n        src={renderData.frameUrl}\n        style={iframeStyle}\n        frameBorder={0}\n        key={renderData.frameUrl}\n        className={renderData.frameClass}\n      />\n    );\n  }\n\n  render() {\n    const { renderData, children, ...otherProps } = this.props;\n\n    return (\n      <div\n        className={`${renderData.containerClass}`}\n        style={{ ...renderData.parentContainerStyle, height: '300px', width: '300px' }}\n      >\n        <input\n          {...otherProps}\n          type=\"file\"\n          ref={renderData.dummyRef}\n          style={renderData.dummyElementStyle}\n          tabIndex={-1}\n          className={this.props.className || ''}\n        />\n        {this.renderFrame(renderData)}\n        {children}\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport React from 'react';\n\nexport interface LunaSecConfigContextProps {\n  lunaSecDomain: string;\n  sessionAuthProvider?: string;\n  authenticationErrorHandler: (e: Error) => void;\n}\n\n// We throw in wrapComponent if this gets left empty like this\nexport const LunaSecConfigContext = React.createContext<LunaSecConfigContextProps>({\n  lunaSecDomain: '',\n  authenticationErrorHandler: (e) => {\n    throw e;\n  },\n});\n\nexport type LunaSecConfigContextType = React.ContextType<typeof LunaSecConfigContext>;\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport React from 'react';\n\nexport interface SecureFormContextProps {\n  addTokenCommitCallback: (frameId: string, cb: () => Promise<void>) => void;\n  removeTokenCommitCallback: (frameId: string) => void;\n  submit: () => void;\n}\n\n// Note: The \"default functions\" here are only used by components that *don't* have a Provider in the component chain.\n// Everything won't work _anyway_ if somebody does that, so we're OK not to. :pray:\n// We redefine these functions in the SecureForm to set the state there\nexport const SecureFormContext = React.createContext<SecureFormContextProps>({\n  addTokenCommitCallback: () => {\n    console.debug('called the token commit provider outside of context, element must be outside of form');\n  },\n  removeTokenCommitCallback: () => {\n    console.debug('called the token commit provider outside of context, element must be outside of form');\n  },\n  submit: () => {\n    console.debug('called the submit provider out of context, element must be outside of form');\n  },\n});\n\nexport type SecureFormContextType = React.ContextType<typeof SecureFormContext>;\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n// Used by SecureForm to write tokens to hidden inputs\n// This madness is necessary to set a value on a react element in a way that will trigger the onChange listener.  As of\n// 2021, setting the value by ref will not trigger onChange listeners.\n\n// TODO: make this work with typescript and eslint\n// export default function setNativeValue(element: HTMLInputElement, value: string) {\n//   // @ts-ignore\n//   const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n//   const prototype = Object.getPrototypeOf(element);\n//   // @ts-ignore\n//   const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\n//\n//   if (valueSetter && valueSetter !== prototypeValueSetter) {\n//     // @ts-ignore\n//     prototypeValueSetter.call(element, value);\n//   } else {\n//     // @ts-ignore\n//     valueSetter.call(element, value);\n//   }\n// }\n\nexport default function setNativeValue(componentName: 'Input' | 'TextArea', element: HTMLElement, value: string) {\n  const nativePropertyDescriptor = getNativeProp(componentName);\n  if (nativePropertyDescriptor === undefined) {\n    throw new Error('Could not get native value property for setting token');\n  }\n  if (nativePropertyDescriptor.set === undefined) {\n    throw new Error('Unable to set native property descriptor value for element');\n  }\n\n  nativePropertyDescriptor.set.call(element, value);\n  const e = new Event('input', { bubbles: true });\n  element.dispatchEvent(e);\n}\n\nfunction getNativeProp(elementType: 'Input' | 'TextArea') {\n  if (elementType === 'Input') {\n    return Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value');\n  } else {\n    return Object.getOwnPropertyDescriptor(window.HTMLTextAreaElement.prototype, 'value');\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {\n  addReactEventListener,\n  AttributesMessage,\n  FrameMessageCreator,\n  FrameNotification,\n  generateSecureNonce,\n  getStyleInfo,\n  LunaSecAuthentication,\n  ReadElementStyle,\n  triggerBlur,\n  triggerFocus,\n} from '@lunasec/browser-common';\nimport { LunaSecError, scrubProperties } from '@lunasec/isomorphic-common';\nimport classnames from 'classnames';\nimport React, { Component, CSSProperties, JSXElementConstructor, RefObject } from 'react';\nimport styled from 'styled-components';\n\nimport { LunaSecConfigContext } from '../providers/LunaSecConfigContext';\nimport { SecureFormContext, SecureFormContextType } from '../providers/SecureFormContext';\nimport {\n  ClassLookup,\n  LunaSecWrappedComponentProps,\n  RenderData,\n  TagLookup,\n  WrapperProps,\n  WrapperPropsWithProviders,\n} from '../types/internal-types';\nimport setNativeValue from '../utils/set-native-value';\n\nexport interface WrapperState {\n  frameStyleInfo: ReadElementStyle | null;\n  frameFullyLoaded: boolean;\n  sessionAuthenticated: boolean;\n  isValid: boolean;\n}\n\n// Since almost all the logic of being a Secure Component is shared(such as RPC),\n// this function wraps a component found in ./elements with that logic.\n// and adjusts for any small differences using the componentName to change behaviors between different types of components.\nexport default function WrapComponent<W extends keyof ClassLookup>(\n  UnstyledWrappedParam: ClassLookup[W],\n  componentNameParam: W\n) {\n  // We do this to let typescript know these function parameters will not be modified\n  // typescript doesn't trust function params to stay locked, but it does trust const\n  const UnstyledWrapped: ClassLookup[W] = UnstyledWrappedParam;\n  const componentName: W = componentNameParam;\n\n  // Add some style to the element, for now just to do loading animations\n  const Wrapped = styled(UnstyledWrapped)`\n    .loading-animation {\n      animation: shimmer 2s infinite;\n      background: linear-gradient(to right, #eff1f3 4%, #e2e2e2 25%, #eff1f3 36%);\n      background-size: 1000px 100%;\n      border-radius: 5px;\n    }\n    @keyframes shimmer {\n      0% {\n        background-position: -1000px 0;\n      }\n      100% {\n        background-position: 1000px 0;\n      }\n    }\n    .hidden {\n      opacity: 0;\n    }\n  `;\n\n  class WrappedComponent extends Component<WrapperPropsWithProviders<W>, WrapperState> {\n    declare context: SecureFormContextType;\n    static contextType = SecureFormContext;\n\n    readonly messageCreator: FrameMessageCreator;\n    // This is created on component mounted to enable server-side rendering\n    abortController!: AbortController;\n    /**\n     * The frameId is a random unique value(nonce) that is associated with a given iframe instance.\n     */\n    readonly frameId!: string;\n\n    readonly frameRef!: RefObject<HTMLIFrameElement>;\n    readonly dummyRef!: RefObject<HTMLElementTagNameMap[TagLookup[W]]>;\n    readonly dummyInputStyleRef!: RefObject<HTMLInputElement>;\n    readonly formContext!: SecureFormContextType;\n    readonly lunaSecDomain: string;\n    readonly isInputLike = componentName === 'Input' || componentName === 'TextArea';\n    frameReadyForListening = false;\n    readonly auth: LunaSecAuthentication;\n    stopSessionManagement?: () => void;\n    private lastTokenSent?: string;\n\n    constructor(props: WrapperPropsWithProviders<W>) {\n      super(props);\n      this.throwIfLunaSecConfigNotSet();\n      this.throwIfErrorHandlerNotSet();\n      this.frameId = generateSecureNonce();\n      this.frameRef = React.createRef();\n      this.dummyRef = React.createRef();\n      this.dummyInputStyleRef = React.createRef();\n      this.formContext = props.formContext;\n      this.lunaSecDomain = props.lunaSecConfigContext.lunaSecDomain;\n\n      this.messageCreator = new FrameMessageCreator(this.lunaSecDomain, this.frameId, (notification) =>\n        this.frameNotificationCallback(notification)\n      );\n\n      this.auth = new LunaSecAuthentication(\n        props.lunaSecConfigContext.lunaSecDomain,\n        props.lunaSecConfigContext.authenticationErrorHandler,\n        props.lunaSecConfigContext.sessionAuthProvider\n      );\n\n      this.state = {\n        frameStyleInfo: null,\n        frameFullyLoaded: false,\n        sessionAuthenticated: false,\n        isValid: true,\n      };\n    }\n\n    throwIfLunaSecConfigNotSet() {\n      // It would be nice if there was an easier way to detect if we had loaded the default provider instead of one set by the user\n      if (this.props.lunaSecConfigContext.lunaSecDomain.length === 0) {\n        throw new Error(\n          'LunaSecConfigContext Provider must be registered around any LunaSec components.  You probably want to include it at the top level in your app.tsx'\n        );\n      }\n    }\n\n    throwIfErrorHandlerNotSet() {\n      if (!this.props.errorHandler || typeof this.props.errorHandler !== 'function') {\n        throw new Error(\n          'Error handler must be set for all LunaSec Components.  Pass the errorHandler prop to your secure component with a function to handle errors'\n        );\n      }\n    }\n\n    componentDidMount() {\n      this.abortController = new AbortController();\n      addReactEventListener(this.props.lunaSecConfigContext.lunaSecDomain, window, this.abortController, (message) =>\n        this.messageCreator.postReceived(message)\n      );\n      void this.auth.startSessionManagement().then((abortSessionCallback) => {\n        this.setState({ sessionAuthenticated: true });\n        this.stopSessionManagement = abortSessionCallback;\n      });\n    }\n\n    // Pass this to our wrapped component so it can tell us when its on the DOM and ready to give us styles\n    // Our pattern causes the component to render twice, the first time without the iframe\n    // in order to capture the style from the dummy element.  Then this callback is called\n    // and style is put onto the state, causing the component to rerender with the iframe properly styled\n    wrappedComponentDidMount() {\n      this.setState({\n        frameStyleInfo: this.generateElementStyle(),\n      });\n      if (this.isInputLike) {\n        this.formContext.addTokenCommitCallback(this.frameId, () => {\n          return this.triggerTokenCommit();\n        });\n        // Prefill the dummy element with a token if one was passed in props\n        if ('token' in this.props) {\n          const currentDummy = this.dummyRef.current;\n          if (!currentDummy) {\n            throw new Error('Token Commit cant find dummy element to insert token into');\n          }\n          if ('value' in currentDummy) {\n            currentDummy.value = this.props.token || '';\n          }\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      this.abortController.abort();\n      if (this.isInputLike) {\n        this.formContext.removeTokenCommitCallback(this.frameId);\n      }\n      if (this.stopSessionManagement) {\n        this.stopSessionManagement();\n      }\n    }\n\n    componentDidUpdate() {\n      // Also causes style changes to propagate, as long as they come from within react\n      if (this.frameReadyForListening) {\n        void this.sendIFrameAttributes();\n      }\n    }\n\n    generateElementStyle() {\n      if (!this.dummyRef.current) {\n        throw new Error('Unable to locate `dummyRef` for wrapped component when generating style');\n      }\n\n      const dummyInputStyleRef = this.dummyInputStyleRef.current;\n      if (componentName === 'Input' && !dummyInputStyleRef) {\n        throw new Error('Unable to locate dummyInputStyleRef when generating style for input');\n      }\n\n      // Inputs have a separate dummy element for styling because of issues with html5 validations on inputs\n      // if its not an input just use the the main dummy element\n      const styleRef = componentName === 'Input' && dummyInputStyleRef ? dummyInputStyleRef : this.dummyRef.current;\n      const styleInfo = getStyleInfo(styleRef);\n\n      if (!styleInfo) {\n        return null;\n      }\n\n      if (!styleInfo.parentStyle) {\n        return null;\n      }\n\n      styleInfo.parentStyle.position = 'absolute';\n      styleInfo.parentStyle.top = '0';\n      styleInfo.parentStyle.left = '0';\n\n      return styleInfo;\n    }\n\n    generateUrl() {\n      const lunaConf = this.props.lunaSecConfigContext;\n\n      const frameURL = new URL('frame', lunaConf.lunaSecDomain);\n      frameURL.searchParams.set('n', this.frameId);\n      frameURL.searchParams.set('origin', window.location.origin);\n      frameURL.searchParams.set('component', componentName);\n      return frameURL.toString();\n    }\n\n    validationHandler(isValid: boolean) {\n      if (!('onValidate' in this.props)) {\n        throw new Error('Got validation message from iframe for component without an onValidation handler');\n      }\n      this.setState({ isValid: isValid });\n      if ('onValidate' in this.props && this.props.onValidate) {\n        this.props.onValidate(isValid);\n      }\n    }\n\n    // TODO: (Plugins Epic) refactor this into a callback that gets passed to this class\n    // Generate some attributes for sending to the iframe via RPC.\n    generateIFrameAttributes(): AttributesMessage {\n      const id = this.frameId;\n      // initialize the attributes with the only required property\n      const attrs: AttributesMessage = { id, component: componentName };\n\n      // Build the style for the iframe\n      const style = this.generateElementStyle();\n      if (!style) {\n        console.error('Attempted to build style for element but it wasnt populated yet');\n      } else {\n        delete style.childStyle.style.display;\n        attrs.style = JSON.stringify(style.childStyle);\n      }\n\n      // Pull from the \"type\" of an input element if we have one in our wrapped element\n      const dummyElement = this.dummyRef.current;\n      if ((attrs.component === 'Uploader' || attrs.component === 'Input') && dummyElement) {\n        const inputType = dummyElement.getAttribute('type');\n        if (inputType) {\n          attrs.type = inputType;\n        }\n      }\n\n      if (attrs.component === 'Uploader' || attrs.component === 'Input' || attrs.component === 'TextArea') {\n        if ('customMetadata' in this.props) {\n          attrs.customMetadata = this.props.customMetadata;\n        }\n      }\n\n      if ('token' in this.props && 'fileTokens' in this.props) {\n        throw new Error(\"Can't have both tokens and fileTokens specified in props\");\n      }\n\n      if (attrs.component !== 'Uploader' && 'token' in this.props) {\n        if (this.props.token !== this.lastTokenSent) {\n          attrs.token = this.props.token;\n          this.lastTokenSent = this.props.token;\n        }\n      }\n      if (attrs.component === 'Uploader' && 'fileTokens' in this.props) {\n        attrs.fileTokens = this.props.fileTokens;\n      }\n      if (attrs.component === 'Input' && 'placeholder' in this.props && this.props.placeholder) {\n        attrs.placeholder = this.props.placeholder;\n      }\n\n      if ('validator' in this.props) {\n        if (attrs.component !== 'Input') {\n          throw new Error('Validators can only be set on SecureInputs');\n        }\n        if (!this.props.onValidate) {\n          throw new Error(\n            'Must pass onValidate() callback when a validator is specified.  Use the callback to block the form from submitting and display user feedback.'\n          );\n        }\n        attrs.validator = this.props.validator;\n      }\n      return attrs;\n    }\n\n    // Give the iframe all the information it needs to exist when it wakes up\n    async sendIFrameAttributes() {\n      const frameAttributes = this.generateIFrameAttributes();\n      const message = this.messageCreator.createMessageToFrame('Attributes', frameAttributes);\n      if (!this.frameRef.current || !this.frameRef.current.contentWindow) {\n        console.error('Frame not initialized for message sending');\n        return;\n      }\n      await this.messageCreator.sendMessageToFrameWithReply(this.frameRef.current.contentWindow, message);\n      return;\n    }\n\n    frameNotificationCallback(notification: FrameNotification) {\n      switch (notification.command) {\n        case 'NotifyOnStart':\n          this.frameReadyForListening = true;\n          void this.sendIFrameAttributes();\n          break;\n        case 'NotifyOnToken':\n          if ('onTokenChange' in this.props && this.props.onTokenChange && 'token' in notification.data) {\n            this.props.onTokenChange(notification.data.token);\n          }\n          break;\n        case 'NotifyOnFullyLoaded':\n          this.setState({ frameFullyLoaded: true });\n          break;\n        case 'NotifyOnBlur':\n          this.blur();\n          break;\n        case 'NotifyOnValidate':\n          this.validationHandler(notification.data.isValid);\n          break;\n        case 'NotifyOnSubmit':\n          this.formContext.submit();\n          break;\n        case 'NotifyOnError':\n          this.props.errorHandler(new LunaSecError(notification.data)); // Call the application's provided error handler\n          break;\n      }\n    }\n\n    // Blur happens after the element loses focus\n    blur() {\n      if (!this.isInputLike) {\n        return;\n      }\n      const dummyElement = this.dummyRef.current;\n      if (!dummyElement) {\n        throw new Error('Missing element to trigger notification for in secure frame');\n      }\n\n      const currentlyFocusedElement = document.activeElement;\n\n      // In order to trigger a blur event, we must first focus the element.\n      triggerFocus(dummyElement);\n      // Only then will the blur be triggered.\n      triggerBlur(dummyElement);\n\n      // put the focus back where it was before we hacked it\n      if (currentlyFocusedElement) {\n        triggerFocus(currentlyFocusedElement);\n      }\n    }\n\n    // Left here for posterity, but I (forrest) think we can assume styles wont be changed except by react\n    // and that is caught by ComponentDidUpdate above.  This function has serious performance impact\n    // watchStyle() {\n    //   const observer = new MutationObserver(() => this.sendIFrameAttributes());\n    //   if (!this.dummyRef.current) {\n    //     return console.error('Attempted to register style watcher on component not yet mounted');\n    //   }\n    //   observer.observe(this.dummyRef.current, {\n    //     attributeFilter: ['style'],\n    //   });\n    // }\n\n    // Called on form submit from the SecureForm\n    // we pass this into the SecureFormProvider so that it can call it when we submit\n    public async triggerTokenCommit(): Promise<void> {\n      if (componentName !== 'Input' && componentName !== 'TextArea') {\n        throw new Error('Attempted to trigger a token commit for something that wasnt an Input or TextArea');\n      }\n\n      const message = this.messageCreator.createMessageToFrame('CommitToken', {});\n\n      const currentFrame = this.frameRef.current;\n      if (!currentFrame || !currentFrame.contentWindow) {\n        console.error('Attempted token commit for unmounted frame');\n        return;\n      }\n      const response = await this.messageCreator.sendMessageToFrameWithReply(currentFrame.contentWindow, message);\n\n      if (!response) {\n        return console.error('No response from frame for token commit');\n      }\n      if (!response.data.success) {\n        return console.error('Tokenization failed: ', response.data.error);\n      }\n      if (response.data.token === undefined) {\n        return console.error('Tokenization didnt return a token: ', response);\n      }\n\n      const currentDummy = this.dummyRef.current;\n      if (!currentDummy) {\n        throw new Error('Token Commit cant find dummy element to insert token into');\n      }\n\n      setNativeValue(componentName, currentDummy, response.data.token);\n      // This timeout is an attempt to give the above events time to propagate and any user code time to execute,\n      // like it would have in a normal form where the user pressed submit.  Yes, we are hacking hard now\n      return new Promise((resolve) => {\n        setTimeout(resolve, 5);\n      });\n    }\n\n    renderLoadingOverlay() {\n      if (this.state.frameFullyLoaded) {\n        return null;\n      }\n\n      const overlayStyles: CSSProperties = {\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 2,\n        display: 'block',\n      };\n\n      return <div style={overlayStyles} className=\"loading-animation\" />;\n    }\n\n    render() {\n      if (!this.state.sessionAuthenticated) {\n        return null;\n      }\n      // We make the parent container relative so that we can throw the dummy element to the top left\n      // corner so that it will not move the real elements around.\n      const parentContainerStyle: CSSProperties = {\n        position: 'relative',\n        display: 'block',\n      };\n\n      const dummyElementStyle: CSSProperties = {\n        // position: 'absolute',\n        // top: 0,\n        // left: 0,\n        // We can't set the \"visibility\" to \"collapsed\" or \"hidden\",\n        // Or else the \"on focus\" and \"on blur\" events won't fire.\n        // So we use zIndex instead to \"hide\" the input.\n        zIndex: -1,\n        opacity: 0,\n        display: 'block',\n        resize: 'none',\n      };\n\n      const validatedName = this.props.name !== undefined ? this.props.name : '';\n\n      // TODO: Fix the types so that we don't have to do this anymore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      const containerName = `secure-${componentName.toLowerCase()}-container-${validatedName}`;\n\n      const containerClass = classnames({\n        [`secure-${componentName.toLowerCase()}-container-${this.frameId}`]: true,\n        [containerName]: !!this.props.name,\n      });\n\n      const renderData: RenderData<W> = {\n        frameId: this.frameId,\n        frameUrl: this.generateUrl(),\n        frameStyleInfo: this.state.frameStyleInfo,\n        containerClass,\n        frameClass: classnames(`lunasec-iframe-${componentName.toLowerCase()}`, {\n          hidden: !this.state.frameFullyLoaded,\n        }),\n        hiddenElementClass: classnames({ invalid: !this.state.isValid }), // only used by input at the moment\n        frameRef: this.frameRef,\n        dummyRef: this.dummyRef,\n        dummyInputStyleRef: this.dummyInputStyleRef,\n        mountedCallback: this.wrappedComponentDidMount.bind(this),\n        parentContainerStyle,\n        dummyElementStyle,\n      };\n\n      const scrubbedProps = scrubProperties(this.props, [\n        'customMetadata',\n        'token',\n        'onTokenChange',\n        'onValidate',\n        'validator',\n        'formContext',\n        'lunaSecConfigContext',\n        'errorHandler',\n        'fileTokens',\n      ]);\n\n      const propsForWrapped: LunaSecWrappedComponentProps<W> = {\n        renderData,\n      };\n\n      // TODO: Fix this so the properties don't break in typescript.\n      // For now be careful and think about what props you pass\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const IgnoredWrapped = Wrapped as any;\n\n      return (\n        <IgnoredWrapped {...scrubbedProps} {...propsForWrapped}>\n          {this.renderLoadingOverlay()}\n        </IgnoredWrapped>\n      );\n    }\n  }\n\n  // This small functional component is the only way for a component to access\n  // more than one provider, thanks to a major shortcoming of react. So our\n  // \"wrapped component\" is actually double wrapped, first by this function\n  // component to add the providers, then by the class above.\n  // You can never be too careful.\n  return function ProviderWrapper(props: WrapperProps<W>) {\n    const componentWithProviders: React.ReactElement<\n      WrapperProps<W>,\n      JSXElementConstructor<Component<WrapperPropsWithProviders<W>, WrapperState>>\n    > = (\n      <SecureFormContext.Consumer>\n        {(formContext) => {\n          return (\n            <LunaSecConfigContext.Consumer>\n              {(lunaSecConfigContext) => {\n                return (\n                  <WrappedComponent {...props} formContext={formContext} lunaSecConfigContext={lunaSecConfigContext} />\n                );\n              }}\n            </LunaSecConfigContext.Consumer>\n          );\n        }}\n      </SecureFormContext.Consumer>\n    );\n\n    return componentWithProviders;\n  };\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { timeout } from '@lunasec/browser-common';\nimport React, { Component } from 'react';\n\nimport { SecureFormContext } from '../providers/SecureFormContext';\n\nexport interface SecureFormProps extends React.ComponentPropsWithoutRef<'form'> {\n  /**\n   * @param On Submit - We call this function when the form submits, just like a normal React form\n   */\n  readonly onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\n/**\n * Secure Form Component, a wrapper around HTML Form that can handle SecureElements.\n * Use it like a normal `<form>` element.\n * ```tsx\n * <SecureForm name=\"secure-form-example\" onSubmit={(e) => this.persistTokens(e)}>\n *   Your input elements, a mix of LunaSec and normal is fine\n *   <input type=\"submit\" />\n * </SecureForm>\n * ```\n * @category Component\n *\n */\nexport class SecureForm extends Component<SecureFormProps> {\n  declare readonly context: React.ContextType<typeof SecureFormContext>;\n  private tokenCommitCallbacks: Record<string, () => Promise<void>>;\n  private form: React.RefObject<HTMLFormElement>;\n\n  constructor(props: SecureFormProps) {\n    super(props);\n    this.tokenCommitCallbacks = {};\n    this.form = React.createRef();\n  }\n\n  private async onSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const commitPromises = Object.keys(this.tokenCommitCallbacks).map((frameId) => {\n      const triggerCommit = this.tokenCommitCallbacks[frameId];\n      return triggerCommit();\n    });\n\n    // Now just wait for side effects to happen\n    // TODO: Catch and display errors here in some clean way\n    await Promise.all(commitPromises);\n\n    // This timeout is an attempt to give the above events time to propagate and any user code time to execute,\n    // like it would have in a normal form where the user pressed submit.  That's right, we are hacking now\n    await timeout(5);\n    this.props.onSubmit(e);\n  }\n\n  render() {\n    return (\n      <SecureFormContext.Provider\n        value={{\n          addTokenCommitCallback: (frameId: string, cb: () => Promise<void>) => {\n            this.tokenCommitCallbacks[frameId] = cb;\n          },\n          removeTokenCommitCallback: (frameId: string) => {\n            delete this.tokenCommitCallbacks[frameId];\n          },\n          submit: () => {\n            if (this.form.current) {\n              this.form.current.dispatchEvent(new Event('submit', { cancelable: true, bubbles: true }));\n            }\n          },\n        }}\n      >\n        <form {...this.props} ref={this.form} onSubmit={(e) => this.onSubmit(e)}>\n          {this.props.children}\n        </form>\n      </SecureFormContext.Provider>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.4e447d9c.svg\";","/* eslint-disable react/jsx-no-target-blank */\n/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Box, Card, CardContent, CardHeader, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport logo from '../../static/logo.svg';\n\nconst useStyles = makeStyles(() => ({\n  LogoImg: {\n    width: 300,\n    paddingBottom: 5,\n  },\n}));\n\nexport const Home: React.FunctionComponent = () => {\n  const classes = useStyles({});\n  return (\n    <Grid item xs={12}>\n      <Card>\n        <CardContent>\n          <img alt=\"LunaSec Logo\" src={logo} className={classes.LogoImg} />\n          <h1>LunaSec Demo: Dedicated Tokenizer with Passport Authentication</h1>\n          <Typography>\n            This is a fully functional application which uses LunaSec to protect its sensitive data.\n          </Typography>\n          <br />\n          <Typography>\n            It looks and functions like any other web app, but many of the fields have been secured with LunaSec. Under\n            the hood, LunaSec is keeping the data secure. To set up LunaSec in your own application, see the{' '}\n            <a\n              href=\"https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/introduction/\"\n              target=\"_blank\"\n              rel=\"prefetch\"\n            >\n              Getting Started Guide.\n            </a>\n          </Typography>\n        </CardContent>\n      </Card>\n      <br />\n      <Card>\n        <CardHeader title=\"Getting Started\" />\n        <Divider />\n        <CardContent>\n          <Typography component=\"div\">\n            Before trying the LunaSec Secure Elements, you must first login to the site by using the links on the left.\n            A test user has been created for you to login with.\n            <h4>Login Credentials:</h4>\n            <ul>\n              <li>\n                Username: <b>test</b>\n              </li>\n              <li>\n                Password: <b>test</b>\n              </li>\n            </ul>\n            <p>\n              You may also register a new user with any username and password. Once you&apos;ve logged in, you will see\n              a list of elements on the left that you can try in order to explore the app.\n            </p>\n            <Divider />\n            <p>\n              Selecting from a mode with the buttons in the header will switch between different demos. Each demo runs\n              with a different backend service and provides a reference for the different ways that you can integrate\n              LunaSec into your stack.\n            </p>\n            <Divider />\n            <div>\n              <h4>See LunaSec in Action</h4>\n              <p>\n                LunaSec elements are designed to look like normal elements. You will need to dig deeper to see it\n                working:\n              </p>\n              <ul>\n                <li>Use your browser&apos;s Dev Tools to inspect the input elements in the example pages.</li>\n                <li>\n                  Look at the network traffic to see the communication with the Tokenizer Backend and local AWS S3\n                  bucket to store encrypted data.\n                </li>\n                <li>\n                  Review the{' '}\n                  <a\n                    href=\"https://github.com/lunasec-io/lunasec/tree/master/js/demo-apps/packages\"\n                    target=\"_blank\"\n                    rel=\"prefetch\"\n                  >\n                    source code\n                  </a>{' '}\n                  behind this app to start understanding how it works.\n                </li>\n                <li>\n                  Simulate an attack by trying to leak the sensitive data in the examples. Injecting Javascript into the\n                  page should not reveal any sensitive data from the secure fields.\n                </li>\n              </ul>\n            </div>\n          </Typography>\n        </CardContent>\n      </Card>\n      <br />\n      <Card>\n        <CardHeader title=\"Resources\" />\n        <Divider />\n        <CardContent>\n          <Typography component=\"div\">\n            <Box mt={-2}>\n              <h3>Documentation Links</h3>\n            </Box>\n            <ul>\n              <li>\n                <b>\n                  <a href=\"https://www.lunasec.io/docs/pages/overview/introduction/\" target=\"_blank\" rel=\"prefetch\">\n                    Main Documentation\n                  </a>\n                  :\n                </b>{' '}\n                This is the general documentation and is a helpful place to get started with LunaSec.\n              </li>\n\n              <li>\n                <b>\n                  <a\n                    href=\"https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/introduction/\"\n                    target=\"_blank\"\n                    rel=\"prefetch\"\n                  >\n                    Getting Started Guide\n                  </a>\n                  :\n                </b>{' '}\n                A specific guide for setting up the Secure Components in your own application.\n              </li>\n\n              <li>\n                <b>\n                  <a\n                    href=\"https://www.lunasec.io/docs/pages/overview/demo-app/walkthrough/\"\n                    target=\"_blank\"\n                    rel=\"prefetch\"\n                  >\n                    Demo App Walkthrough\n                  </a>\n                  :\n                </b>{' '}\n                An overview of this Demo App, how to use it, and a walkthrough of architecture (with links to the source\n                code).\n              </li>\n            </ul>\n            <p>\n              Thank you for trying LunaSec. For professional support,{' '}\n              <a href=\"https://www.lunasec.io/contact\"> contact us</a>.\n            </p>\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport axios from 'axios';\n\nimport { ApiResponse, UserDocumentsResponse, UserResponse } from './types';\n\n// Its better to instantiate your own copy of axios with axios.create(), this global setting left in for testing purposes because it tends to cause more issues\naxios.defaults.withCredentials = true;\n\nconst expressUrl = process.env.REACT_APP_EXPRESS_URL as string;\n\nasync function loadDocuments() {\n  const { data } = await axios.get<UserDocumentsResponse>(`${expressUrl}/documents`);\n  return data;\n}\n\nasync function uploadDocumentTokens(documents: string[]) {\n  const { data } = await axios.post<ApiResponse>(`${expressUrl}/documents`, { documents });\n  return data;\n}\n\nasync function login(username: string, password: string) {\n  const { data } = await axios.post<UserResponse>(`${expressUrl}/auth/login`, { username, password });\n  return data;\n}\n\nasync function signup(username: string, password: string) {\n  const { data } = await axios.post<UserResponse>(`${expressUrl}/auth/signup`, { username, password });\n  return data;\n}\n\nasync function saveSsn(ssn_token: string) {\n  const { data } = await axios.post<ApiResponse>(`${expressUrl}/user/set-ssn`, { ssn_token });\n  return data;\n}\n\nasync function loadUser() {\n  const { data } = await axios.get<UserResponse>(`${expressUrl}/user/me`);\n  return data;\n}\nexport const expressTransport = {\n  signup,\n  login,\n  saveSsn,\n  loadUser,\n  loadDocuments,\n  uploadDocumentTokens,\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { ApolloClient, createHttpLink, gql, InMemoryCache } from '@apollo/client';\n\nimport { ApiResponse, Transport, UserDocumentsResponse, UserResponse } from './types';\n\nconst graphqlUrl = process.env.REACT_APP_GRAPHQL_URL as string;\n\nconst link = createHttpLink({\n  uri: `${graphqlUrl}/graphql`,\n  credentials: 'include',\n});\n\nconst apollo = new ApolloClient({\n  link,\n  cache: new InMemoryCache(), // Todo: It is a good idea to set up a cache that won't last longer than the grant time.  Here we are just using network-only to bypass that issue\n  defaultOptions: {\n    query: {\n      fetchPolicy: 'network-only',\n    },\n  },\n});\n\nasync function saveSsn(ssn_token: string) {\n  const res = await apollo.mutate({\n    variables: { ssn_token },\n    mutation: gql`\n      mutation SetSsn($ssn_token: String!) {\n        setSsn(ssnInfo: { ssn_token: $ssn_token }) {\n          success\n          error\n        }\n      }\n    `,\n  });\n  return res.data.setSsn as ApiResponse;\n}\n\nasync function loadUser() {\n  const res = await apollo.query({\n    query: gql`\n      query GetCurrentUser {\n        getCurrentUser {\n          success\n          error\n          user {\n            username\n            ssn_token\n          }\n        }\n      }\n    `,\n  });\n  return res.data.getCurrentUser as UserResponse;\n}\n\nasync function loadDocuments() {\n  const res = await apollo.query({\n    query: gql`\n      query GetDocuments {\n        getDocuments {\n          success\n          error\n          documents {\n            token\n          }\n        }\n      }\n    `,\n  });\n  const data = res.data.getDocuments;\n  // Have to do a little data rearranging here to keep parity with the express endpoint\n  const unwrappedDocumentTokens = data.documents ? data.documents.map((doc: { token: string }) => doc.token) : null;\n  const result: UserDocumentsResponse = {\n    error: data.error,\n    success: data.success,\n    documents: unwrappedDocumentTokens,\n  };\n  return result;\n}\n\nasync function uploadDocumentTokens(documents: string[]) {\n  const res = await apollo.mutate({\n    variables: { documents },\n    mutation: gql`\n      mutation SetDocuments($documents: [String]!) {\n        setDocuments(tokenArray: { documents: $documents }) {\n          success\n          error\n        }\n      }\n    `,\n  });\n  return res.data.setDocuments as ApiResponse;\n}\n\nasync function login(username: string, password: string) {\n  const res = await apollo.mutate({\n    variables: { username, password },\n    mutation: gql`\n      mutation Login($username: String!, $password: String!) {\n        login(userInfo: { username: $username, password: $password }) {\n          success\n          error\n          user {\n            username\n            ssn_token\n          }\n        }\n      }\n    `,\n  });\n  return res.data.login as UserResponse;\n}\n\nasync function signup(username: string, password: string) {\n  const res = await apollo.mutate({\n    variables: { username, password },\n    mutation: gql`\n      mutation Signup($username: String!, $password: String!) {\n        signup(userInfo: { username: $username, password: $password }) {\n          success\n          error\n          user {\n            username\n            ssn_token\n          }\n        }\n      }\n    `,\n  });\n  return res.data.signup as UserResponse;\n}\n\nexport const graphQlTransport: Transport = {\n  signup,\n  login,\n  saveSsn,\n  loadUser,\n  loadDocuments,\n  uploadDocumentTokens,\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n// easy-peasy is a simple store based on Redux, with a bad name\n\nimport { action, computed, createStore, createTypedHooks, thunk } from 'easy-peasy';\n\nimport { expressTransport } from './express-transport';\nimport { graphQlTransport } from './graphql-transport';\nimport { Mode, StoreModel, Transport } from './types';\n\nexport function getTransport(mode: Mode): Transport {\n  if (mode === 'graphql') {\n    return graphQlTransport;\n  }\n  return expressTransport;\n}\nexport const store = createStore<StoreModel>({\n  user: null,\n  loggedIn: computed((state) => !!state.user),\n  setUser: action((state, user) => {\n    state.user = user;\n  }),\n  setSsn: action((state, ssn) => {\n    if (!state.user) {\n      throw new Error('Cant set SSN for a user that isnt logged in');\n    }\n    state.user.ssn_token = ssn;\n  }),\n\n  saveSsn: thunk(async (actions, { transport, ssn_token }, { getState }) => {\n    const currentUser = getState().user;\n    if (!currentUser) {\n      throw new Error('Cant set SSN for a user that isnt logged in');\n    }\n    const data = await transport.saveSsn(ssn_token);\n    if (data.success) {\n      actions.setUser({ ...currentUser, ssn_token });\n    }\n    return data;\n  }),\n\n  loadUser: thunk(async (actions, { transport }) => {\n    const data = await transport.loadUser();\n    if (data.success) {\n      actions.setUser(data.user);\n      return data;\n    }\n    return data;\n  }),\n\n  loadDocuments: thunk(async (actions, { transport }) => {\n    return transport.loadDocuments();\n  }),\n\n  uploadDocumentTokens: thunk(async (actions, { transport, documents }) => {\n    return transport.uploadDocumentTokens(documents);\n  }),\n\n  login: thunk(async (actions, { transport, username, password }) => {\n    const data = await transport.login(username, password);\n    if (data.success) {\n      actions.setUser(data.user);\n    }\n    return data;\n  }),\n\n  signup: thunk(async (actions, { transport, username, password }) => {\n    const data = await transport.signup(username, password);\n    if (data.success) {\n      actions.setUser(data.user);\n    }\n    return data;\n  }),\n});\n\nconst typedHooks = createTypedHooks<StoreModel>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Button, FormControl, FormHelperText, FormLabel, makeStyles, Paper, TextField } from '@material-ui/core';\nimport React, { FormEvent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useStoreActions } from '../store';\nimport { Transport } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing() * 2,\n  },\n  center: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  padding: {\n    padding: theme.spacing(),\n  },\n}));\n\nexport const Login: React.FunctionComponent<{\n  transport: Transport;\n}> = (props) => {\n  const classes = useStyles({});\n\n  const history = useHistory();\n  const [error, setError] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const loginThunk = useStoreActions((actions) => actions.login);\n  const login = async (e: FormEvent) => {\n    e.preventDefault();\n    const data = await loginThunk({ transport: props.transport, username, password });\n    if (!data.success) {\n      setError(data.error);\n      return;\n    }\n    history.push(`/${window.location.hash}`);\n  };\n\n  return (\n    <Paper className={classes.padding}>\n      <form id=\"login-form\" onSubmit={(e) => login(e)}>\n        <FormControl className={`${classes.margin}`} error={!!error}>\n          <FormLabel>Login</FormLabel>\n          <TextField\n            className={classes.margin}\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            fullWidth\n            autoFocus\n            required\n          />\n          <TextField\n            className={classes.margin}\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            fullWidth\n            required\n          />\n          <FormHelperText className={classes.margin}>{error}</FormHelperText>\n          <Button\n            className={classes.margin}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ textTransform: 'none' }}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </FormControl>\n      </form>\n    </Paper>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Button, FormControl, FormHelperText, FormLabel, makeStyles, Paper, TextField } from '@material-ui/core';\nimport React, { FormEvent, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport { useStoreActions } from '../store';\nimport { Transport } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing() * 2,\n  },\n  padding: {\n    padding: theme.spacing(),\n  },\n}));\n\nexport const Signup: React.FunctionComponent<{\n  transport: Transport;\n}> = (props) => {\n  const classes = useStyles({});\n  const history = useHistory();\n  const [error, setError] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const signupThunk = useStoreActions((actions) => actions.signup);\n  const match = useRouteMatch<{ mode: string }>(`/:mode`);\n\n  const signup = async (e: FormEvent) => {\n    e.preventDefault();\n    const data = await signupThunk({ transport: props.transport, username, password });\n    if (!data.success) {\n      setError(data.error);\n      return;\n    }\n\n    // Send us to the first example\n    if (match && match.params.mode) {\n      history.push(`/${match.params.mode}/secureinput`);\n    }\n  };\n\n  return (\n    <Paper className={classes.padding}>\n      <form id=\"signup-form\" onSubmit={(e) => signup(e)}>\n        <FormControl className={`${classes.margin}`} error={!!error}>\n          <FormLabel>Signup</FormLabel>\n          <TextField\n            className={classes.margin}\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            fullWidth\n            autoFocus\n            required\n          />\n          <TextField\n            className={classes.margin}\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            fullWidth\n            required\n          />\n          {error ? <FormHelperText className={classes.margin}>{error}</FormHelperText> : null}\n          <Button\n            className={classes.margin}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ textTransform: 'none' }}\n            type=\"submit\"\n          >\n            Signup\n          </Button>\n        </FormControl>\n      </form>\n    </Paper>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { LunaSecConfigContext } from '@lunasec/react-sdk';\nimport React from 'react';\nimport { Route, useParams, useRouteMatch } from 'react-router-dom'; // Pages\n\nimport { Home } from './components/Home';\nimport { Login } from './components/Login';\nimport { Signup } from './components/Signup';\nimport { SecureDownloadDemo } from './components/secure-components/SecureDownloadDemo';\nimport { SecureInputDemo } from './components/secure-components/SecureInputDemo';\nimport { SecureParagraphDemo } from './components/secure-components/SecureParagraphDemo';\nimport { SecureTextAreaDemo } from './components/secure-components/SecureTextAreaDemo';\nimport { SecureUploadDemo } from './components/secure-components/SecureUploadDemo';\nimport { Transport } from './types';\n\nconst componentLookup = {\n  login: Login,\n  signup: Signup,\n  secureinput: SecureInputDemo,\n  secureupload: SecureUploadDemo,\n  secureparagraph: SecureParagraphDemo,\n  securedownload: SecureDownloadDemo,\n  securetextarea: SecureTextAreaDemo,\n};\n\nconst RenderDemoComponent: React.FunctionComponent<{ transport: Transport }> = (props) => {\n  const { component } = useParams<{ component: keyof typeof componentLookup }>();\n  const DemoComponent = componentLookup[component];\n  return <DemoComponent transport={props.transport} />;\n};\n\nexport const DedicatedPassportReactApp: React.FunctionComponent<{\n  transport: Transport;\n  sessionAuthProvider: string;\n}> = (props) => {\n  const { sessionAuthProvider } = props;\n  const { path } = useRouteMatch();\n  return (\n    <LunaSecConfigContext.Provider\n      value={{\n        lunaSecDomain: process.env.REACT_APP_TOKENIZER_URL ? process.env.REACT_APP_TOKENIZER_URL : '',\n        sessionAuthProvider: sessionAuthProvider,\n        authenticationErrorHandler: (e: Error) => {\n          // setAuthError('Failed to authenticate with LunaSec. \\n Is a user logged in?');\n          console.error('AUTH ERROR FROM LUNASEC', JSON.stringify(e));\n        },\n      }}\n    >\n      <Route exact path={`${path}/`} component={Home} />\n      <Route path={`${path}/:component`}>\n        <RenderDemoComponent transport={props.transport} />\n      </Route>\n    </LunaSecConfigContext.Provider>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { SecureForm, SecureInput } from '@lunasec/react-sdk';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormGroup,\n  FormLabel,\n  Grid,\n  TextField,\n} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useState } from 'react';\n\nimport { useStoreActions, useStoreState } from '../../store';\nimport { Transport } from '../../types';\n\nexport const SecureInputDemo: React.FunctionComponent<{\n  transport: Transport;\n}> = (props) => {\n  const [showSaveSuccessful, setShowSaveSuccessful] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [ssn_token, setSsnToken] = useState<string | null>(null);\n  const [ssnValid, setSsnValid] = useState<boolean>(true);\n  const saveSsn = useStoreActions((actions) => actions.saveSsn);\n\n  const user = useStoreState((state) => state.user);\n  const uploadFormData = async () => {\n    if (ssn_token === null) {\n      setError('Please enter a social security number');\n      return;\n    }\n    const data = await saveSsn({ transport: props.transport, ssn_token });\n    if (!data.success) {\n      setError(JSON.stringify(data.error));\n      return;\n    }\n    setShowSaveSuccessful(true);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (ssnValid) {\n      void uploadFormData();\n    }\n  };\n\n  if (!user) {\n    return (\n      <Grid item xs={12}>\n        <Card>\n          <CardContent>\n            <p>Loading...</p>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  }\n\n  // These props are predefined like this to preserve the strong typing.\n  // We are being fancy here and passing these into MaterialUi,\n  // but if you want to use SecureInput directly just pass these directly into it\n  const secureInputProps: React.ComponentProps<typeof SecureInput> = {\n    id: 'ssn-token-input',\n    name: 'ssn',\n    type: 'ssn',\n    validator: 'SSN',\n    onValidate: (isValid: boolean) => setSsnValid(isValid),\n    token: user.ssn_token || undefined,\n    placeholder: 'XXX-XX-XXXX',\n    onChange: (e) => setSsnToken(e.target.value),\n    errorHandler: (e) => setError(e.message),\n    customMetadata: { someCustom: 'metadata' },\n  };\n\n  function renderErrors() {\n    if (error !== null) {\n      return (\n        <Alert\n          onClose={() => {\n            setError(null);\n          }}\n          severity=\"error\"\n          id=\"success-alert\"\n        >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  function renderSuccessMessage() {\n    if (showSaveSuccessful) {\n      return (\n        <Alert\n          onClose={() => {\n            setShowSaveSuccessful(false);\n          }}\n          severity=\"success\"\n          id=\"success-alert\"\n        >\n          <AlertTitle>Success</AlertTitle>\n          Social Security Number has been Tokenized and Saved\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Card>\n        <CardHeader title={'Secure Input Demo'} />\n        <CardContent>\n          <p>\n            The below input element has been secured with LunaSec. Right click and inspect it to see that it is actually\n            inside of an iFrame. A hacker would be unable to read the text even if they were able to embed malicious\n            JavaScript into this page.\n          </p>\n          <p>\n            To see how to set up your own Secure Input,{' '}\n            <a href={'https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/handling-text/'}>\n              see here\n            </a>\n            .\n          </p>\n          <Divider />\n          <br />\n          {renderSuccessMessage()}\n          {renderErrors()}\n          <SecureForm name=\"secure-form-example\" onSubmit={(e) => handleFormSubmit(e)}>\n            <FormGroup>\n              <FormLabel htmlFor=\"ssn-token-input\">Social Security Number</FormLabel>\n              {/* Here we are using Material with the LunaSec Secure Input instead of using SecureInput directly.  Experimental */}\n              <TextField\n                error={!ssnValid}\n                helperText={ssnValid ? '' : 'Invalid Format'}\n                variant=\"outlined\"\n                // label=\"Labels don't work quite right yet\"\n                InputProps={{\n                  /*\n                  // eslint-disable-next-line\n                  // @ts-ignore */\n                  inputComponent: SecureInput,\n                  inputProps: secureInputProps,\n                }}\n              />\n            </FormGroup>\n            <Box sx={{ mt: 1 }}>\n              <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: 'none' }} type=\"submit\">\n                Save\n              </Button>\n            </Box>\n          </SecureForm>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { SecureUpload } from '@lunasec/react-sdk';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { useStoreActions } from '../../store';\nimport { Transport } from '../../types';\n\nexport const SecureUploadDemo: React.FunctionComponent<{\n  transport: Transport;\n}> = (props) => {\n  const [error, setError] = useState<string | null>(null);\n  const [saveSuccessful, setSaveSuccessful] = useState<boolean | null>(null);\n  const [documents, setDocuments] = useState<string[]>([]);\n  const [loadDocuments, uploadDocumentTokens] = useStoreActions((actions) => [\n    actions.loadDocuments,\n    actions.uploadDocumentTokens,\n  ]);\n\n  useEffect(() => {\n    // TODO: Move this into the Router\n    const loadDocumentsAction = async () => {\n      const data = await loadDocuments({ transport: props.transport });\n      if (data.success) {\n        setDocuments(data.documents);\n        return;\n      }\n      setError(data.error);\n    };\n\n    void loadDocumentsAction();\n  }, [loadDocuments, props.transport]);\n\n  const saveDocuments = async () => {\n    const data = await uploadDocumentTokens({ transport: props.transport, documents });\n    if (!data.success) {\n      setError(JSON.stringify(data.error));\n      return;\n    }\n    setSaveSuccessful(true);\n  };\n\n  if (documents === null) {\n    return (\n      <Grid item xs={12}>\n        <Card>\n          <CardContent>\n            <p>Loading...</p>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Card>\n        <CardHeader title=\"Secure Upload Demo\" />\n        <CardContent>\n          <p>\n            This uploader dialog is a pre-made LunaSec component that uploads files into LunaSec and returns tokens. All\n            file uploads happen from within the a separate iFrame, so this page is never able to see the actual data.\n          </p>\n          <p>\n            To see how to set up your own Secure Uploader,{' '}\n            <a\n              href={\n                'https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/handling-files/#uploading-a-file'\n              }\n            >\n              see here\n            </a>\n            .\n          </p>\n          <Divider />\n          <br />\n          <FormControl error={!!error}>\n            <FormGroup>\n              <FormLabel htmlFor=\"drivers-license-upload\">Select a File to Upload</FormLabel>\n              <SecureUpload\n                id=\"drivers-license-upload\"\n                name=\"uploader\"\n                fileTokens={documents}\n                onTokenChange={(tokens) => {\n                  setDocuments(tokens);\n                }}\n                customMetadata={{ customField: 'example' }}\n                errorHandler={(e) => setError(e.message)}\n              />\n            </FormGroup>\n            {error ? <FormHelperText>{error}</FormHelperText> : null}\n            {saveSuccessful ? <FormHelperText>Saving documents was successful!</FormHelperText> : null}\n            <Button\n              id=\"save-documents\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{ textTransform: 'none' }}\n              onClick={saveDocuments}\n            >\n              Save Documents\n            </Button>\n          </FormControl>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { SecureParagraph } from '@lunasec/react-sdk';\nimport { Card, CardContent, CardHeader, Divider, Grid, Typography } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useState } from 'react';\n\nimport { useStoreState } from '../../store';\n\nexport const SecureParagraphDemo: React.FunctionComponent = () => {\n  const [error, setError] = useState<string | null>(null);\n  const user = useStoreState((state) => state.user);\n\n  if (!user) {\n    return (\n      <Grid item xs={12}>\n        <Card>\n          <CardContent>\n            <p>Loading...</p>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  }\n\n  function renderErrors() {\n    if (error !== null) {\n      return (\n        <Alert\n          onClose={() => {\n            setError(null);\n          }}\n          severity=\"error\"\n        >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Card>\n        <CardHeader title=\"Secure Paragraph Demo\" />\n        <CardContent>\n          <p>\n            The below paragraph element has been tokenized by LunaSec. It displays the data that was saved in the Secure\n            Input of the previous demo. It&apos;s in an iFrame and can&apos;t be snooped by JavaScript running on this\n            page.\n          </p>\n          <p>\n            To see how to set up your own Secure Paragraph,{' '}\n            <a\n              href={\n                'https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/handling-text/#displaying-secure-data'\n              }\n            >\n              see here\n            </a>\n            .\n          </p>\n          <Divider />\n          <br />\n          {renderErrors()}\n          <Typography>Social Security Number:</Typography>\n          <SecureParagraph token={user.ssn_token} errorHandler={(e) => setError(e.message)} />\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { SecureDownload } from '@lunasec/react-sdk';\nimport { Card, CardContent, CardHeader, Divider, Grid, Typography } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\n\nimport { useStoreActions } from '../../store';\nimport { Transport } from '../../types';\n\nexport const SecureDownloadDemo: React.FunctionComponent<{\n  transport: Transport;\n}> = (props) => {\n  const [error, setError] = useState<string | null>(null);\n  const [documents, setDocuments] = useState<string[]>([]);\n\n  const loadDocuments = useStoreActions((actions) => actions.loadDocuments);\n\n  useEffect(() => {\n    const loadDocumentsAction = async () => {\n      const data = await loadDocuments({ transport: props.transport });\n      if (!data.success) {\n        setError(JSON.stringify(data.error));\n        return;\n      }\n      setDocuments(data.documents);\n    };\n\n    void loadDocumentsAction(); // does this only once\n  }, [loadDocuments, props.transport]);\n\n  function renderErrors() {\n    if (error !== null) {\n      return (\n        <Alert\n          onClose={() => {\n            setError(null);\n          }}\n          severity=\"error\"\n        >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  if (documents.length < 1) {\n    return (\n      <Grid item xs={12}>\n        <Card>\n          <CardContent>\n            <p>No documents to download, please upload a document first in SecureUpload</p>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid item xs={12}>\n      {renderErrors()}\n      <Card>\n        <CardHeader title={`Secure Download Demo`} />\n        <CardContent>\n          <p>\n            This download link downloads the last file uploaded to Secure Upload in the previous demo. If you right\n            click and inspect the element with your Developer Tools, you will see that it is actually inside of an\n            iFrame. Even the file name is protected by LunaSec.\n          </p>\n          <p>\n            To see how to set up your own Secure Download,{' '}\n            <a\n              href={\n                'https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/handling-files/#downloading-a-file'\n              }\n            >\n              see here\n            </a>\n            .\n          </p>\n          <Divider />\n          <br />\n          <Typography>Download Link:</Typography>\n          <SecureDownload token={documents[documents.length - 1]} errorHandler={(e) => setError(e.message)} />\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { SecureForm, SecureParagraph, SecureTextArea } from '@lunasec/react-sdk';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormGroup,\n  FormLabel,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useState } from 'react';\n\nexport const SecureTextAreaDemo: React.FunctionComponent = () => {\n  const [error, setError] = useState<string | null>(null);\n  const [textAreaToken, setTextAreaToken] = useState<string | null>(null);\n\n  function renderErrors() {\n    if (error !== null) {\n      return (\n        <Alert\n          onClose={() => {\n            setError(null);\n          }}\n          severity=\"error\"\n        >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Card>\n        <CardHeader title=\"Secure Text Area Demo\" />\n        <CardContent>\n          <p>\n            This demo shows the Secure Text Area and Secure Paragraph components working together. Right click and\n            inspect to see that they&apos;re both in iFrames.\n          </p>\n          <p>\n            To see how to set up your own Secure Text Area,{' '}\n            <a\n              href={'https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/handling-text/#secure-forms'}\n            >\n              see here\n            </a>\n            .\n          </p>\n          <Divider />\n          <br />\n          <SecureForm\n            name=\"secure-form-example\"\n            onSubmit={(_e) => console.log('form submitted but didnt call server because this example is local only')}\n          >\n            <FormGroup>\n              {renderErrors()}\n              <FormLabel htmlFor=\"ssn-token-input\">Tokenize multiple lines of text</FormLabel>\n              <SecureTextArea\n                style={{ height: '45px' }}\n                id=\"ssn-token-input\"\n                name=\"ssn\"\n                // token={some.prefilled.value}\n                onChange={(e) => setTextAreaToken(e.target.value)}\n                errorHandler={(e) => setError(e.message)}\n              />\n            </FormGroup>\n            <div>\n              <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: 'none' }} type=\"submit\">\n                Save\n              </Button>\n            </div>\n          </SecureForm>\n        </CardContent>\n        <Card>\n          <CardContent>\n            <Typography>Detokenized Text:</Typography>\n            <SecureParagraph\n              style={{ whiteSpace: 'break-spaces' }}\n              token={textAreaToken || undefined}\n              errorHandler={(e) => setError(e.message)}\n            />\n          </CardContent>\n        </Card>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { AppBar, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport { createStyles, Theme } from '@material-ui/core/styles';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport React, { useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport { useStoreActions, useStoreState } from '../store';\nimport { Transport } from '../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    title: {\n      flexGrow: 1,\n    },\n    toggleButtonGroup: {\n      backgroundColor: 'white',\n      marginRight: '30px',\n    },\n  })\n);\n\n// TODO: De-dupe this code with the other header\nexport const Header: React.FunctionComponent<{\n  transport: Transport;\n}> = (props) => {\n  const classes = useStyles({});\n  const user = useStoreState((state) => state.user);\n  const loadUser = useStoreActions((actions) => actions.loadUser);\n\n  useEffect(() => {\n    void loadUser({ transport: props.transport }); // Small hack to do this here but it makes sure the user is loaded whenever a page refreshes, ideally would happen in a dedicated component mounted in App\n  }, [loadUser, props.transport]);\n\n  const showLoggedInStatus = () => {\n    if (user) {\n      return <Typography id=\"user-status\">{`Logged in: ${user.username}`}</Typography>;\n    }\n    return <Typography id=\"user-status\">Not Logged In</Typography>;\n  };\n\n  const history = useHistory();\n\n  // When the mode switch button is pushed, this sets the hash and refreshes the page to the desired demo\n  const handleModeChange = (_event: React.MouseEvent<HTMLElement>, value: string) => {\n    if (!value) {\n      return;\n    }\n\n    history.push(`/${encodeURIComponent(value)}`);\n  };\n\n  const match = useRouteMatch<{ mode: string }>('/:mode');\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          LunaSec Example App\n        </Typography>\n        <ToggleButtonGroup\n          className={classes.toggleButtonGroup}\n          exclusive\n          value={match && match.params.mode}\n          onChange={handleModeChange}\n          aria-label=\"text formatting\"\n        >\n          <ToggleButton id=\"select-mode-express\" value=\"express\" aria-label=\"express\">\n            Express\n          </ToggleButton>\n          <ToggleButton id=\"select-mode-graphql\" value=\"graphql\" aria-label=\"graphql\">\n            GraphQl\n          </ToggleButton>\n          <ToggleButton id=\"select-mode-simple\" value=\"simple\" aria-label=\"simple\">\n            Simple\n          </ToggleButton>\n        </ToggleButtonGroup>\n        {showLoggedInStatus()}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\nimport { createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  ChatBubbleOutline,\n  CloudUpload,\n  FormatTextdirectionLToR,\n  GetApp,\n  Home,\n  Lock,\n  LockOpen,\n  VpnKey,\n} from '@material-ui/icons';\nimport React from 'react';\nimport { match, NavLink, useRouteMatch } from 'react-router-dom';\n\nimport { useStoreState } from '../store';\nimport { Mode } from '../types';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n  })\n);\n\nconst RenderLoginSignupLinks: React.FunctionComponent<{ loggedIn: boolean; mode: Mode }> = (props) => {\n  const { url } = useRouteMatch();\n  const match = useRouteMatch(`${url}/:component`);\n\n  if (props.mode === 'simple') {\n    return null;\n  }\n\n  if (props.loggedIn) {\n    return null;\n  }\n\n  return (\n    <>\n      {renderListItem(<VpnKey />, `${url}/signup`, 'Signup', match)}\n      {renderListItem(<LockOpen />, `${url}/login`, 'Login', match)}\n    </>\n  );\n};\n\nfunction renderListItem<T>(icon: JSX.Element, page: string, text: string, routeMatch: match<T> | null) {\n  const selected = routeMatch && routeMatch.url === page;\n\n  return (\n    <ListItem button component={NavLink} to={page} selected={selected || false}>\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  );\n}\n\nconst RenderSecureComponentLinks: React.FunctionComponent<{\n  loggedIn: boolean;\n  mode: Mode;\n}> = (props) => {\n  const { url } = useRouteMatch();\n  const match = useRouteMatch(`${url}/:component`);\n\n  if (props.mode === 'simple') {\n    return (\n      <>\n        {renderListItem(<Lock />, `${url}/tokenize`, 'Tokenize', match)}\n        {renderListItem(<LockOpen />, `${url}/detokenize`, 'Detokenize', match)}\n      </>\n    );\n  }\n\n  if (!props.loggedIn) {\n    return null;\n  }\n\n  return (\n    <>\n      {renderListItem(<ChatBubbleOutline />, `${url}/secureinput`, 'SecureInput', match)}\n      {renderListItem(<FormatTextdirectionLToR />, `${url}/secureparagraph`, 'SecureParagraph', match)}\n      {renderListItem(<CloudUpload />, `${url}/secureupload`, 'SecureUpload', match)}\n      {renderListItem(<GetApp />, `${url}/securedownload`, 'SecureDownload', match)}\n      {renderListItem(<GetApp />, `${url}/securetextarea`, 'SecureTextArea', match)}\n    </>\n  );\n};\n\nexport const SideMenu: React.FunctionComponent<{ mode: Mode }> = (props) => {\n  const classes = useStyles({});\n  const loggedIn = useStoreState((state) => state.loggedIn);\n\n  const { mode } = props;\n\n  const { url } = useRouteMatch();\n\n  const match = useRouteMatch({\n    path: url,\n    exact: true,\n  });\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.toolbar} />\n      <List>\n        {renderListItem(<Home />, `${url}`, 'Home', match)}\n        <RenderLoginSignupLinks loggedIn={loggedIn} mode={mode} />\n        <RenderSecureComponentLinks loggedIn={loggedIn} mode={mode} />\n      </List>\n    </Drawer>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Tokenizer } from './tokenizer';\n\n// todo: figure out why typedoc for this interface isn't being generated\nexport interface SimpleTokenizerClientConfig {\n  /** The address of the tokenizer backend */\n  host: string;\n  /** The base route of the tokenizer backend where routes have been added to your server, defaults to `/.lunasec` which is the default SimpleTokenizerBackend base route */\n  baseRoute?: string;\n  metaEncoding?: 'base64';\n}\n// strips down the methods of the tokenizer client to just the ones supported by the \"simple\" npm module\n/**\n * Simple Tokenizer client for calling the Simple Tokenizer Backend running in your express app.  Does not interoperate with the rest of LunaSec's modules, just\n * a bare bones implementation of tokenization.\n */\nexport class SimpleTokenizer {\n  private readonly tokenizer: Tokenizer;\n  /**\n   * @param config A configuration object.  You most likely only want to use the `host` parameter to point to your express backend.\n   */\n  constructor(config: SimpleTokenizerClientConfig) {\n    if (!config.baseRoute) {\n      config.baseRoute = '/.lunasec';\n    }\n    const url = new URL(config.baseRoute, config.host);\n    this.tokenizer = new Tokenizer({ url: url.toString(), metaEncoding: config.metaEncoding });\n  }\n\n  tokenize(input: string | Buffer) {\n    return this.tokenizer.tokenize(input, { dataType: 'string' });\n  }\n\n  detokenize(tokenId: string) {\n    return this.tokenizer.detokenize(tokenId);\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { SimpleTokenizer } from '@lunasec/tokenizer-sdk';\n\nconst simpleTokenizerUrl = process.env.REACT_APP_SIMPLE_TOKENIZER_URL as string;\n\nexport const tokenizer = new SimpleTokenizer({\n  host: simpleTokenizerUrl,\n});\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nimport { UserResponse } from '../../../common/types';\nimport { tokenizer } from '../configureTokenizer';\n\nconst simpleTokenizerUrl = process.env.REACT_APP_SIMPLE_TOKENIZER_URL as string;\n\n// If you need to change axios settings, do it with axios.create({options}), messing with the global instance can cause issues\nexport const DetokenizeDemo: React.FunctionComponent = () => {\n  const [error, setError] = useState<string | null>(null);\n  const [ssn, setSsn] = useState<string | null>(null);\n\n  const loadSsn = async () => {\n    try {\n      const { data } = await axios.get<UserResponse>(`${simpleTokenizerUrl}/user/me`);\n      if (!data.success) {\n        setError(data.error);\n        return;\n      }\n      if (!data.user.ssn_token) {\n        setSsn('None Set');\n        return;\n      }\n      const tokenizerResponse = await tokenizer.detokenize(data.user.ssn_token);\n      if (!tokenizerResponse.success) {\n        setError(tokenizerResponse.error.toString());\n        return;\n      }\n      setSsn(tokenizerResponse.value);\n    } catch (e) {\n      setError((e as Error).toString());\n    }\n  };\n\n  useEffect(() => {\n    void loadSsn();\n  }, []);\n\n  function renderErrors() {\n    if (error !== null) {\n      return (\n        <Alert\n          onClose={() => {\n            setError(null);\n          }}\n          severity=\"error\"\n          id=\"success-alert\"\n        >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Card>\n        <CardHeader title=\"Detokenized Social Secure Number\" />\n        <CardContent>\n          {renderErrors()}\n          <Typography>Social Security Number:</Typography>\n          <p>{ssn}</p>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Button, Card, CardContent, FormGroup, FormLabel, Grid, TextField } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport axios from 'axios';\nimport React, { useState } from 'react';\n\nimport { ApiResponse } from '../../../common/types';\nimport { tokenizer } from '../configureTokenizer';\n\nconst simpleTokenizerUrl = process.env.REACT_APP_SIMPLE_TOKENIZER_URL as string;\n\nexport const TokenizeDemo: React.FunctionComponent = () => {\n  const [showSaveSuccessful, setShowSaveSuccessful] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [ssn, setSsn] = useState<string | null>(null);\n\n  const uploadFormData = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (ssn === null) {\n      setError('Please enter a social security number');\n      return;\n    }\n    try {\n      const tokenizerResponse = await tokenizer.tokenize(ssn);\n      if (!tokenizerResponse.success) {\n        setError(tokenizerResponse.error.toString());\n        return;\n      }\n      const { data } = await axios.post<ApiResponse>(`${simpleTokenizerUrl}/user/set-ssn`, {\n        ssn_token: tokenizerResponse.tokenId,\n      });\n      if (!data.success) {\n        setError(data.error);\n        return;\n      }\n      setShowSaveSuccessful(true);\n    } catch (e) {\n      setError((e as Error).toString());\n    }\n  };\n\n  function renderErrors() {\n    if (error !== null) {\n      return (\n        <Alert\n          onClose={() => {\n            setError(null);\n          }}\n          severity=\"error\"\n          id=\"success-alert\"\n        >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  function renderSuccessMessage() {\n    if (showSaveSuccessful) {\n      return (\n        <Alert\n          onClose={() => {\n            setShowSaveSuccessful(false);\n          }}\n          severity=\"success\"\n          id=\"success-alert\"\n        >\n          <AlertTitle>Success</AlertTitle>\n          Social Security Number has been Tokenized and Saved\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Card>\n        {/*<CardHeader title={`User: ${user.username}`} />*/}\n        <CardContent>\n          {renderSuccessMessage()}\n          {renderErrors()}\n          <form name=\"secure-form-example\" onSubmit={(e) => uploadFormData(e)}>\n            <FormGroup>\n              <FormLabel htmlFor=\"ssn-token-input\">Social Security Number</FormLabel>\n              {/* Here we are using Material with the LunaSec Secure Input instead of using SecureInput directly.  Experimental */}\n              <TextField variant=\"outlined\" onChange={(e) => setSsn(e.target.value)} />\n            </FormGroup>\n            <div>\n              <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: 'none' }} type=\"submit\">\n                Save\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","/* eslint-disable react/jsx-no-target-blank */\n/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Route } from 'react-router-dom'; // Pages\n\nimport logo from '../static/logo.svg';\n\nimport { DetokenizeDemo } from './components/secure-components/Detokenize';\nimport { TokenizeDemo } from './components/secure-components/TokenizeDemo';\n\nconst useStyles = makeStyles(() => ({\n  LogoImg: {\n    width: 300,\n    paddingBottom: 5,\n  },\n}));\n\nexport const SimpleApp = () => {\n  const classes = useStyles({});\n\n  return (\n    <>\n      <Route exact path=\"/simple\">\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <img alt=\"LunaSec Logo\" src={logo} className={classes.LogoImg} />\n              <h1>LunaSec Demo: Simple tokenizer</h1>\n              <Typography>\n                This application uses the LunaSec Simple Tokenizer. It&apos;s less sophisticated than the dedicated\n                tokenizer, but it does not require any dedicated infrastructure to run.\n              </Typography>\n              <br />\n              <Typography>\n                You can read more about the tradeoffs{' '}\n                <a\n                  href=\"https://www.lunasec.io/docs/pages/getting-started/choose-your-setup/\"\n                  target=\"_blank\"\n                  rel=\"prefetch\"\n                >\n                  here\n                </a>\n                .\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Route>\n      <Route path=\"/simple/tokenize\" component={TokenizeDemo} />\n      <Route path=\"/simple/detokenize\" component={DetokenizeDemo} />\n    </>\n  );\n};\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { createStyles, CssBaseline, makeStyles, Theme } from '@material-ui/core';\nimport { StoreProvider } from 'easy-peasy';\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Redirect, Route, useLocation } from 'react-router-dom';\n\nimport { DedicatedPassportReactApp } from './common/App';\nimport { Header } from './common/components/Header';\nimport { SideMenu } from './common/components/SideMenu';\nimport { getTransport, store, useStoreActions } from './common/store';\nimport { Mode } from './common/types';\nimport { SimpleApp } from './simple-tokenizer/App';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    main: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n  })\n);\n\nexport const AppContainer: React.FunctionComponent = () => {\n  const classes = useStyles({});\n  const location = useLocation();\n  const mode = location.pathname.split('/')[1] as Mode; //todo: make this work with react router instead..\n  const transport = getTransport(mode);\n\n  const loadUser = useStoreActions((actions) => actions.loadUser);\n  useEffect(() => {\n    loadUser({ transport });\n  }, [loadUser, transport]);\n\n  return (\n    <>\n      <Route exact path=\"/\">\n        <Redirect to=\"/express\" />\n      </Route>\n      <Route\n        path=\"/:mode\"\n        render={() => {\n          return (\n            <div className={classes.root}>\n              <CssBaseline />\n              <Header transport={transport} />\n              <SideMenu mode={mode} />\n              <main className={classes.main}>\n                <div className={classes.toolbar} />\n                <Route path=\"/express\">\n                  <DedicatedPassportReactApp sessionAuthProvider=\"express-back-end\" transport={transport} />\n                </Route>\n                <Route path=\"/graphql\">\n                  <DedicatedPassportReactApp sessionAuthProvider=\"graphql-back-end\" transport={transport} />\n                </Route>\n                <Route path=\"/simple\">\n                  <SimpleApp />\n                </Route>\n              </main>\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <BrowserRouter>\n        <AppContainer />\n      </BrowserRouter>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport interface LunaSecErrorProperties {\n  /**  A machine readable name of the error */\n  name: string;\n  /** A human readable error message, suitable to be displayed to the end user */\n  message: string;\n  /** An error code, typically corresponding to an HTTP response code */\n  code: string;\n}\n\nexport class LunaSecError extends Error implements LunaSecErrorProperties {\n  name: string;\n  message: string;\n  code: string;\n\n  /**\n   * @param e An existing Error object to wrap or an object of new properties to build an error from\n   */\n  constructor(e: LunaSecErrorProperties | Error) {\n    super(e.name);\n    this.name = e.name;\n    this.message = e.message;\n    if ('code' in e) {\n      this.code = e.code;\n      return;\n    }\n    this.code = '500';\n  }\n\n  toJSON(): LunaSecErrorProperties {\n    return { name: this.name, message: this.message, code: this.code };\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport function scrubProperties<O extends Record<string, unknown>, P extends string[]>(\n  obj: O,\n  propsToRemove: P\n): Omit<O, keyof P> {\n  const newObj: Record<string, unknown> = {};\n  Object.keys(obj).forEach((key) => {\n    if (!propsToRemove.includes(key)) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj as Omit<O, keyof P>;\n}\n","/*\n * Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { TokenizerClientConfig } from './types';\n\nexport const CONFIG_DEFAULTS: TokenizerClientConfig = {\n  url: 'http://localhost:37766',\n  metaEncoding: 'base64',\n  lockToSession: false,\n};\n\nexport const LUNASEC_TOKEN_REGEXP =\n  /^lunasec-[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/;\n\nexport const SESSION_HASH_HEADER = 'lunasec-session-hash';\n\nexport const AUTHORIZATION_HEADER = 'authorization'.toLowerCase();\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Full Tokenizer API\n * The Tokenizer API used for tokenizing and detokenizing data and working with tokens using the GoLang backend\n *\n * The version of the OpenAPI document: 0.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"http://localhost\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Full Tokenizer API\n * The Tokenizer API used for tokenizing and detokenizing data and working with tokens using the GoLang backend\n *\n * The version of the OpenAPI document: 0.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\nimport { RequiredError,　RequestArgs } from \"./base\";\nimport { AxiosInstance } from 'axios';\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    for (const object of objects) {\n        for (const key in object) {\n            if (Array.isArray(object[key])) {\n                searchParams.delete(key);\n                for (const item of object[key]) {\n                    searchParams.append(key, item);\n                }\n            } else {\n                searchParams.set(key, object[key]);\n            }\n        }\n    }\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || basePath) + axiosArgs.url};\n        return axios.request(axiosRequestArgs);\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Full Tokenizer API\n * The Tokenizer API used for tokenizing and detokenizing data and working with tokens using the GoLang backend\n *\n * The version of the OpenAPI document: 0.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n\n/**\n * \n * @export\n * @interface DetokenizeRequest\n */\nexport interface DetokenizeRequest {\n    /**\n     * The tokenID you want to decode.\n     * @type {string}\n     * @memberof DetokenizeRequest\n     */\n    tokenId: string;\n}\n/**\n * \n * @export\n * @interface DetokenizeResponse\n */\nexport interface DetokenizeResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof DetokenizeResponse\n     */\n    success: boolean;\n    /**\n     * \n     * @type {DetokenizeResponseData}\n     * @memberof DetokenizeResponse\n     */\n    data: DetokenizeResponseData;\n}\n/**\n * \n * @export\n * @interface DetokenizeResponseData\n */\nexport interface DetokenizeResponseData {\n    /**\n     * \n     * @type {string}\n     * @memberof DetokenizeResponseData\n     */\n    downloadUrl: string;\n    /**\n     * \n     * @type {object}\n     * @memberof DetokenizeResponseData\n     */\n    headers: object;\n}\n/**\n * \n * @export\n * @interface ErrorResponse\n */\nexport interface ErrorResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof ErrorResponse\n     */\n    success: boolean;\n    /**\n     * \n     * @type {ErrorResponseError}\n     * @memberof ErrorResponse\n     */\n    error: ErrorResponseError;\n}\n/**\n * \n * @export\n * @interface ErrorResponseError\n */\nexport interface ErrorResponseError {\n    /**\n     * machine parsable human readable short name\n     * @type {string}\n     * @memberof ErrorResponseError\n     */\n    name: string;\n    /**\n     * human readable error thats safe to show the end user\n     * @type {string}\n     * @memberof ErrorResponseError\n     */\n    message: string;\n}\n/**\n * \n * @export\n * @interface FileMeta\n */\nexport interface FileMeta {\n    /**\n     * An object containing any fields you wish.  It is your responsibility to maintain backwards compatibility of this data.\n     * @type {object}\n     * @memberof FileMeta\n     */\n    customFields?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof FileMeta\n     */\n    dataType: string;\n    /**\n     * \n     * @type {number}\n     * @memberof FileMeta\n     */\n    createdAt?: number;\n    /**\n     * \n     * @type {FileMetaFileinfo}\n     * @memberof FileMeta\n     */\n    fileinfo: FileMetaFileinfo;\n}\n/**\n * \n * @export\n * @interface FileMetaFileinfo\n */\nexport interface FileMetaFileinfo {\n    /**\n     * \n     * @type {string}\n     * @memberof FileMetaFileinfo\n     */\n    filename: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FileMetaFileinfo\n     */\n    type?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof FileMetaFileinfo\n     */\n    lastModified?: number;\n}\n/**\n * \n * @export\n * @interface GetMetadataRequest\n */\nexport interface GetMetadataRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof GetMetadataRequest\n     */\n    tokenId: string;\n}\n/**\n * \n * @export\n * @interface GetMetadataResponse\n */\nexport interface GetMetadataResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof GetMetadataResponse\n     */\n    success: boolean;\n    /**\n     * \n     * @type {GetMetadataResponseData}\n     * @memberof GetMetadataResponse\n     */\n    data: GetMetadataResponseData;\n}\n/**\n * \n * @export\n * @interface GetMetadataResponseData\n */\nexport interface GetMetadataResponseData {\n    /**\n     * \n     * @type {MetaData}\n     * @memberof GetMetadataResponseData\n     */\n    metadata: MetaData;\n}\n/**\n * @type MetaData\n * The metadata set for the token.  Metadata is immutable once the token is created.  DataType must be set to tell if it is a string or a file that is tokenized.\n * @export\n */\nexport type MetaData = FileMeta | StringMeta;\n\n/**\n * \n * @export\n * @interface SetGrantRequest\n */\nexport interface SetGrantRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof SetGrantRequest\n     */\n    sessionId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SetGrantRequest\n     */\n    tokenId: string;\n    /**\n     * a string containing a custom time the grant should last, if desired.  Uses golang Duration parsing to parse things like \\\"1h30m20s\\\"\n     * @type {string}\n     * @memberof SetGrantRequest\n     */\n    customDuration?: string;\n}\n/**\n * \n * @export\n * @interface SetGrantResponse\n */\nexport interface SetGrantResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof SetGrantResponse\n     */\n    success: boolean;\n    /**\n     * \n     * @type {object}\n     * @memberof SetGrantResponse\n     */\n    data: object;\n}\n/**\n * \n * @export\n * @interface StringMeta\n */\nexport interface StringMeta {\n    /**\n     * An object containing any fields you wish.  It is your responsibility to maintain backwards compatibility of this data.\n     * @type {object}\n     * @memberof StringMeta\n     */\n    customFields?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof StringMeta\n     */\n    dataType: string;\n}\n/**\n * \n * @export\n * @interface TokenizeRequest\n */\nexport interface TokenizeRequest {\n    /**\n     * \n     * @type {MetaData}\n     * @memberof TokenizeRequest\n     */\n    metadata: MetaData;\n}\n/**\n * \n * @export\n * @interface TokenizeResponse\n */\nexport interface TokenizeResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof TokenizeResponse\n     */\n    success: boolean;\n    /**\n     * \n     * @type {TokenizeResponseData}\n     * @memberof TokenizeResponse\n     */\n    data: TokenizeResponseData;\n}\n/**\n * \n * @export\n * @interface TokenizeResponseData\n */\nexport interface TokenizeResponseData {\n    /**\n     * \n     * @type {string}\n     * @memberof TokenizeResponseData\n     */\n    tokenId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenizeResponseData\n     */\n    uploadUrl: string;\n    /**\n     * \n     * @type {object}\n     * @memberof TokenizeResponseData\n     */\n    headers: object;\n}\n/**\n * \n * @export\n * @interface VerifyGrantRequest\n */\nexport interface VerifyGrantRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof VerifyGrantRequest\n     */\n    sessionId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof VerifyGrantRequest\n     */\n    tokenId: string;\n}\n/**\n * \n * @export\n * @interface VerifyGrantResponse\n */\nexport interface VerifyGrantResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof VerifyGrantResponse\n     */\n    success: boolean;\n    /**\n     * \n     * @type {VerifyGrantResponseData}\n     * @memberof VerifyGrantResponse\n     */\n    data: VerifyGrantResponseData;\n}\n/**\n * \n * @export\n * @interface VerifyGrantResponseData\n */\nexport interface VerifyGrantResponseData {\n    /**\n     * \n     * @type {boolean}\n     * @memberof VerifyGrantResponseData\n     */\n    valid: boolean;\n}\n\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexport const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Detokenize\n         * @param {DetokenizeRequest} detokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detokenize: async (detokenizeRequest: DetokenizeRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'detokenizeRequest' is not null or undefined\n            assertParamExists('detokenize', 'detokenizeRequest', detokenizeRequest)\n            const localVarPath = `/detokenize`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(detokenizeRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Get Metadata\n         * @param {GetMetadataRequest} getMetadataRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMetaData: async (getMetadataRequest: GetMetadataRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'getMetadataRequest' is not null or undefined\n            assertParamExists('getMetaData', 'getMetadataRequest', getMetadataRequest)\n            const localVarPath = `/metadata/get`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(getMetadataRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Create Grant\n         * @param {SetGrantRequest} setGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        setGrant: async (setGrantRequest: SetGrantRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'setGrantRequest' is not null or undefined\n            assertParamExists('setGrant', 'setGrantRequest', setGrantRequest)\n            const localVarPath = `/grant/set`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(setGrantRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Tokenize\n         * @param {TokenizeRequest} tokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tokenize: async (tokenizeRequest: TokenizeRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'tokenizeRequest' is not null or undefined\n            assertParamExists('tokenize', 'tokenizeRequest', tokenizeRequest)\n            const localVarPath = `/tokenize`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(tokenizeRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Verify Grant\n         * @param {VerifyGrantRequest} verifyGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyGrant: async (verifyGrantRequest: VerifyGrantRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'verifyGrantRequest' is not null or undefined\n            assertParamExists('verifyGrant', 'verifyGrantRequest', verifyGrantRequest)\n            const localVarPath = `/grant/verify`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(verifyGrantRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexport const DefaultApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Detokenize\n         * @param {DetokenizeRequest} detokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async detokenize(detokenizeRequest: DetokenizeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DetokenizeResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.detokenize(detokenizeRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Get Metadata\n         * @param {GetMetadataRequest} getMetadataRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getMetaData(getMetadataRequest: GetMetadataRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMetadataResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getMetaData(getMetadataRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Create Grant\n         * @param {SetGrantRequest} setGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async setGrant(setGrantRequest: SetGrantRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SetGrantResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.setGrant(setGrantRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Tokenize\n         * @param {TokenizeRequest} tokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async tokenize(tokenizeRequest: TokenizeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenizeResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.tokenize(tokenizeRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Verify Grant\n         * @param {VerifyGrantRequest} verifyGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async verifyGrant(verifyGrantRequest: VerifyGrantRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyGrantResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.verifyGrant(verifyGrantRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * DefaultApi - factory interface\n * @export\n */\nexport const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = DefaultApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Detokenize\n         * @param {DetokenizeRequest} detokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detokenize(detokenizeRequest: DetokenizeRequest, options?: any): AxiosPromise<DetokenizeResponse> {\n            return localVarFp.detokenize(detokenizeRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Get Metadata\n         * @param {GetMetadataRequest} getMetadataRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMetaData(getMetadataRequest: GetMetadataRequest, options?: any): AxiosPromise<GetMetadataResponse> {\n            return localVarFp.getMetaData(getMetadataRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Create Grant\n         * @param {SetGrantRequest} setGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        setGrant(setGrantRequest: SetGrantRequest, options?: any): AxiosPromise<SetGrantResponse> {\n            return localVarFp.setGrant(setGrantRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Tokenize\n         * @param {TokenizeRequest} tokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tokenize(tokenizeRequest: TokenizeRequest, options?: any): AxiosPromise<TokenizeResponse> {\n            return localVarFp.tokenize(tokenizeRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Verify Grant\n         * @param {VerifyGrantRequest} verifyGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyGrant(verifyGrantRequest: VerifyGrantRequest, options?: any): AxiosPromise<VerifyGrantResponse> {\n            return localVarFp.verifyGrant(verifyGrantRequest, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nexport class DefaultApi extends BaseAPI {\n    /**\n     * \n     * @summary Detokenize\n     * @param {DetokenizeRequest} detokenizeRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public detokenize(detokenizeRequest: DetokenizeRequest, options?: any) {\n        return DefaultApiFp(this.configuration).detokenize(detokenizeRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Get Metadata\n     * @param {GetMetadataRequest} getMetadataRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getMetaData(getMetadataRequest: GetMetadataRequest, options?: any) {\n        return DefaultApiFp(this.configuration).getMetaData(getMetadataRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Create Grant\n     * @param {SetGrantRequest} setGrantRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public setGrant(setGrantRequest: SetGrantRequest, options?: any) {\n        return DefaultApiFp(this.configuration).setGrant(setGrantRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Tokenize\n     * @param {TokenizeRequest} tokenizeRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public tokenize(tokenizeRequest: TokenizeRequest, options?: any) {\n        return DefaultApiFp(this.configuration).tokenize(tokenizeRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Verify Grant\n     * @param {VerifyGrantRequest} verifyGrantRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public verifyGrant(verifyGrantRequest: VerifyGrantRequest, options?: any) {\n        return DefaultApiFp(this.configuration).verifyGrant(verifyGrantRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * GrantsApi - axios parameter creator\n * @export\n */\nexport const GrantsApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Create Grant\n         * @param {SetGrantRequest} setGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        setGrant: async (setGrantRequest: SetGrantRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'setGrantRequest' is not null or undefined\n            assertParamExists('setGrant', 'setGrantRequest', setGrantRequest)\n            const localVarPath = `/grant/set`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(setGrantRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Verify Grant\n         * @param {VerifyGrantRequest} verifyGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyGrant: async (verifyGrantRequest: VerifyGrantRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'verifyGrantRequest' is not null or undefined\n            assertParamExists('verifyGrant', 'verifyGrantRequest', verifyGrantRequest)\n            const localVarPath = `/grant/verify`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(verifyGrantRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * GrantsApi - functional programming interface\n * @export\n */\nexport const GrantsApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = GrantsApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Create Grant\n         * @param {SetGrantRequest} setGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async setGrant(setGrantRequest: SetGrantRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SetGrantResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.setGrant(setGrantRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Verify Grant\n         * @param {VerifyGrantRequest} verifyGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async verifyGrant(verifyGrantRequest: VerifyGrantRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyGrantResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.verifyGrant(verifyGrantRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * GrantsApi - factory interface\n * @export\n */\nexport const GrantsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = GrantsApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Create Grant\n         * @param {SetGrantRequest} setGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        setGrant(setGrantRequest: SetGrantRequest, options?: any): AxiosPromise<SetGrantResponse> {\n            return localVarFp.setGrant(setGrantRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Verify Grant\n         * @param {VerifyGrantRequest} verifyGrantRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyGrant(verifyGrantRequest: VerifyGrantRequest, options?: any): AxiosPromise<VerifyGrantResponse> {\n            return localVarFp.verifyGrant(verifyGrantRequest, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * GrantsApi - object-oriented interface\n * @export\n * @class GrantsApi\n * @extends {BaseAPI}\n */\nexport class GrantsApi extends BaseAPI {\n    /**\n     * \n     * @summary Create Grant\n     * @param {SetGrantRequest} setGrantRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GrantsApi\n     */\n    public setGrant(setGrantRequest: SetGrantRequest, options?: any) {\n        return GrantsApiFp(this.configuration).setGrant(setGrantRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Verify Grant\n     * @param {VerifyGrantRequest} verifyGrantRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GrantsApi\n     */\n    public verifyGrant(verifyGrantRequest: VerifyGrantRequest, options?: any) {\n        return GrantsApiFp(this.configuration).verifyGrant(verifyGrantRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * MetadataApi - axios parameter creator\n * @export\n */\nexport const MetadataApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Get Metadata\n         * @param {GetMetadataRequest} getMetadataRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMetaData: async (getMetadataRequest: GetMetadataRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'getMetadataRequest' is not null or undefined\n            assertParamExists('getMetaData', 'getMetadataRequest', getMetadataRequest)\n            const localVarPath = `/metadata/get`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(getMetadataRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * MetadataApi - functional programming interface\n * @export\n */\nexport const MetadataApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = MetadataApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Get Metadata\n         * @param {GetMetadataRequest} getMetadataRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getMetaData(getMetadataRequest: GetMetadataRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMetadataResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getMetaData(getMetadataRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * MetadataApi - factory interface\n * @export\n */\nexport const MetadataApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = MetadataApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Get Metadata\n         * @param {GetMetadataRequest} getMetadataRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMetaData(getMetadataRequest: GetMetadataRequest, options?: any): AxiosPromise<GetMetadataResponse> {\n            return localVarFp.getMetaData(getMetadataRequest, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * MetadataApi - object-oriented interface\n * @export\n * @class MetadataApi\n * @extends {BaseAPI}\n */\nexport class MetadataApi extends BaseAPI {\n    /**\n     * \n     * @summary Get Metadata\n     * @param {GetMetadataRequest} getMetadataRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetadataApi\n     */\n    public getMetaData(getMetadataRequest: GetMetadataRequest, options?: any) {\n        return MetadataApiFp(this.configuration).getMetaData(getMetadataRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * TokensApi - axios parameter creator\n * @export\n */\nexport const TokensApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Detokenize\n         * @param {DetokenizeRequest} detokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detokenize: async (detokenizeRequest: DetokenizeRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'detokenizeRequest' is not null or undefined\n            assertParamExists('detokenize', 'detokenizeRequest', detokenizeRequest)\n            const localVarPath = `/detokenize`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(detokenizeRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Tokenize\n         * @param {TokenizeRequest} tokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tokenize: async (tokenizeRequest: TokenizeRequest, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'tokenizeRequest' is not null or undefined\n            assertParamExists('tokenize', 'tokenizeRequest', tokenizeRequest)\n            const localVarPath = `/tokenize`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(tokenizeRequest, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * TokensApi - functional programming interface\n * @export\n */\nexport const TokensApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = TokensApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Detokenize\n         * @param {DetokenizeRequest} detokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async detokenize(detokenizeRequest: DetokenizeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DetokenizeResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.detokenize(detokenizeRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Tokenize\n         * @param {TokenizeRequest} tokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async tokenize(tokenizeRequest: TokenizeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenizeResponse>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.tokenize(tokenizeRequest, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * TokensApi - factory interface\n * @export\n */\nexport const TokensApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = TokensApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Detokenize\n         * @param {DetokenizeRequest} detokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detokenize(detokenizeRequest: DetokenizeRequest, options?: any): AxiosPromise<DetokenizeResponse> {\n            return localVarFp.detokenize(detokenizeRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Tokenize\n         * @param {TokenizeRequest} tokenizeRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tokenize(tokenizeRequest: TokenizeRequest, options?: any): AxiosPromise<TokenizeResponse> {\n            return localVarFp.tokenize(tokenizeRequest, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * TokensApi - object-oriented interface\n * @export\n * @class TokensApi\n * @extends {BaseAPI}\n */\nexport class TokensApi extends BaseAPI {\n    /**\n     * \n     * @summary Detokenize\n     * @param {DetokenizeRequest} detokenizeRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TokensApi\n     */\n    public detokenize(detokenizeRequest: DetokenizeRequest, options?: any) {\n        return TokensApiFp(this.configuration).detokenize(detokenizeRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Tokenize\n     * @param {TokenizeRequest} tokenizeRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TokensApi\n     */\n    public tokenize(tokenizeRequest: TokenizeRequest, options?: any) {\n        return TokensApiFp(this.configuration).tokenize(tokenizeRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Full Tokenizer API\n * The Tokenizer API used for tokenizing and detokenizing data and working with tokens using the GoLang backend\n *\n * The version of the OpenAPI document: 0.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ConfigurationParameters {\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    username?: string;\n    password?: string;\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    basePath?: string;\n    baseOptions?: any;\n    formDataCtor?: new () => any;\n}\n\nexport class Configuration {\n    /**\n     * parameter for apiKey security\n     * @param name security name\n     * @memberof Configuration\n     */\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    username?: string;\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    password?: string;\n    /**\n     * parameter for oauth2 security\n     * @param name security name\n     * @param scopes oauth2 scope\n     * @memberof Configuration\n     */\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    /**\n     * override base path\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    basePath?: string;\n    /**\n     * base options for axios calls\n     *\n     * @type {any}\n     * @memberof Configuration\n     */\n    baseOptions?: any;\n    /**\n     * The FormData constructor that will be used to create multipart form data\n     * requests. You can inject this here so that execution environments that\n     * do not support the FormData class can still run the generated client.\n     *\n     * @type {new () => FormData}\n     */\n    formDataCtor?: new () => any;\n\n    constructor(param: ConfigurationParameters = {}) {\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n        this.formDataCtor = param.formDataCtor;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n"],"sourceRoot":""}